# coding: utf-8

"""
    Domain Group API V1

    Provides public access to Domain's microservices  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class DomainAgencyServiceV2ModelAgencySummary(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'in_suburb': 'bool',
        'query_suburb': 'str',
        'has_recently_sold': 'bool',
        'id': 'int',
        'name': 'str',
        'suburb': 'str',
        'logo_url': 'str',
        'base_url': 'str',
        'address1': 'str',
        'address2': 'str',
        'telephone': 'str',
        'rental_telephone': 'str',
        'mobile': 'str',
        'fax': 'str',
        'state': 'str',
        'description': 'str',
        'email': 'str',
        'rental_email': 'str',
        'home_page_search_options': 'str',
        'account_type': 'int',
        'number_sold_in_last3_months': 'int',
        'number_for_sale': 'int',
        'number_for_rent': 'int',
        'domain_url': 'str',
        'show_tab_sold_last_year': 'bool'
    }

    attribute_map = {
        'in_suburb': 'inSuburb',
        'query_suburb': 'querySuburb',
        'has_recently_sold': 'hasRecentlySold',
        'id': 'id',
        'name': 'name',
        'suburb': 'suburb',
        'logo_url': 'logoUrl',
        'base_url': 'baseUrl',
        'address1': 'address1',
        'address2': 'address2',
        'telephone': 'telephone',
        'rental_telephone': 'rentalTelephone',
        'mobile': 'mobile',
        'fax': 'fax',
        'state': 'state',
        'description': 'description',
        'email': 'email',
        'rental_email': 'rentalEmail',
        'home_page_search_options': 'homePageSearchOptions',
        'account_type': 'accountType',
        'number_sold_in_last3_months': 'numberSoldInLast3Months',
        'number_for_sale': 'numberForSale',
        'number_for_rent': 'numberForRent',
        'domain_url': 'domainUrl',
        'show_tab_sold_last_year': 'showTabSoldLastYear'
    }

    def __init__(self, in_suburb=None, query_suburb=None, has_recently_sold=None, id=None, name=None, suburb=None, logo_url=None, base_url=None, address1=None, address2=None, telephone=None, rental_telephone=None, mobile=None, fax=None, state=None, description=None, email=None, rental_email=None, home_page_search_options=None, account_type=None, number_sold_in_last3_months=None, number_for_sale=None, number_for_rent=None, domain_url=None, show_tab_sold_last_year=None):  # noqa: E501
        """DomainAgencyServiceV2ModelAgencySummary - a model defined in Swagger"""  # noqa: E501

        self._in_suburb = None
        self._query_suburb = None
        self._has_recently_sold = None
        self._id = None
        self._name = None
        self._suburb = None
        self._logo_url = None
        self._base_url = None
        self._address1 = None
        self._address2 = None
        self._telephone = None
        self._rental_telephone = None
        self._mobile = None
        self._fax = None
        self._state = None
        self._description = None
        self._email = None
        self._rental_email = None
        self._home_page_search_options = None
        self._account_type = None
        self._number_sold_in_last3_months = None
        self._number_for_sale = None
        self._number_for_rent = None
        self._domain_url = None
        self._show_tab_sold_last_year = None
        self.discriminator = None

        if in_suburb is not None:
            self.in_suburb = in_suburb
        if query_suburb is not None:
            self.query_suburb = query_suburb
        if has_recently_sold is not None:
            self.has_recently_sold = has_recently_sold
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if suburb is not None:
            self.suburb = suburb
        if logo_url is not None:
            self.logo_url = logo_url
        if base_url is not None:
            self.base_url = base_url
        if address1 is not None:
            self.address1 = address1
        if address2 is not None:
            self.address2 = address2
        if telephone is not None:
            self.telephone = telephone
        if rental_telephone is not None:
            self.rental_telephone = rental_telephone
        if mobile is not None:
            self.mobile = mobile
        if fax is not None:
            self.fax = fax
        if state is not None:
            self.state = state
        if description is not None:
            self.description = description
        if email is not None:
            self.email = email
        if rental_email is not None:
            self.rental_email = rental_email
        if home_page_search_options is not None:
            self.home_page_search_options = home_page_search_options
        if account_type is not None:
            self.account_type = account_type
        if number_sold_in_last3_months is not None:
            self.number_sold_in_last3_months = number_sold_in_last3_months
        if number_for_sale is not None:
            self.number_for_sale = number_for_sale
        if number_for_rent is not None:
            self.number_for_rent = number_for_rent
        if domain_url is not None:
            self.domain_url = domain_url
        if show_tab_sold_last_year is not None:
            self.show_tab_sold_last_year = show_tab_sold_last_year

    @property
    def in_suburb(self):
        """Gets the in_suburb of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The in_suburb of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: bool
        """
        return self._in_suburb

    @in_suburb.setter
    def in_suburb(self, in_suburb):
        """Sets the in_suburb of this DomainAgencyServiceV2ModelAgencySummary.


        :param in_suburb: The in_suburb of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: bool
        """

        self._in_suburb = in_suburb

    @property
    def query_suburb(self):
        """Gets the query_suburb of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The query_suburb of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._query_suburb

    @query_suburb.setter
    def query_suburb(self, query_suburb):
        """Sets the query_suburb of this DomainAgencyServiceV2ModelAgencySummary.


        :param query_suburb: The query_suburb of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._query_suburb = query_suburb

    @property
    def has_recently_sold(self):
        """Gets the has_recently_sold of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The has_recently_sold of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: bool
        """
        return self._has_recently_sold

    @has_recently_sold.setter
    def has_recently_sold(self, has_recently_sold):
        """Sets the has_recently_sold of this DomainAgencyServiceV2ModelAgencySummary.


        :param has_recently_sold: The has_recently_sold of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: bool
        """

        self._has_recently_sold = has_recently_sold

    @property
    def id(self):
        """Gets the id of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The id of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DomainAgencyServiceV2ModelAgencySummary.


        :param id: The id of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The name of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DomainAgencyServiceV2ModelAgencySummary.


        :param name: The name of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def suburb(self):
        """Gets the suburb of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The suburb of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._suburb

    @suburb.setter
    def suburb(self, suburb):
        """Sets the suburb of this DomainAgencyServiceV2ModelAgencySummary.


        :param suburb: The suburb of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._suburb = suburb

    @property
    def logo_url(self):
        """Gets the logo_url of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The logo_url of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._logo_url

    @logo_url.setter
    def logo_url(self, logo_url):
        """Sets the logo_url of this DomainAgencyServiceV2ModelAgencySummary.


        :param logo_url: The logo_url of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._logo_url = logo_url

    @property
    def base_url(self):
        """Gets the base_url of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The base_url of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._base_url

    @base_url.setter
    def base_url(self, base_url):
        """Sets the base_url of this DomainAgencyServiceV2ModelAgencySummary.


        :param base_url: The base_url of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._base_url = base_url

    @property
    def address1(self):
        """Gets the address1 of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The address1 of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._address1

    @address1.setter
    def address1(self, address1):
        """Sets the address1 of this DomainAgencyServiceV2ModelAgencySummary.


        :param address1: The address1 of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._address1 = address1

    @property
    def address2(self):
        """Gets the address2 of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The address2 of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._address2

    @address2.setter
    def address2(self, address2):
        """Sets the address2 of this DomainAgencyServiceV2ModelAgencySummary.


        :param address2: The address2 of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._address2 = address2

    @property
    def telephone(self):
        """Gets the telephone of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The telephone of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._telephone

    @telephone.setter
    def telephone(self, telephone):
        """Sets the telephone of this DomainAgencyServiceV2ModelAgencySummary.


        :param telephone: The telephone of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._telephone = telephone

    @property
    def rental_telephone(self):
        """Gets the rental_telephone of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The rental_telephone of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._rental_telephone

    @rental_telephone.setter
    def rental_telephone(self, rental_telephone):
        """Sets the rental_telephone of this DomainAgencyServiceV2ModelAgencySummary.


        :param rental_telephone: The rental_telephone of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._rental_telephone = rental_telephone

    @property
    def mobile(self):
        """Gets the mobile of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The mobile of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._mobile

    @mobile.setter
    def mobile(self, mobile):
        """Sets the mobile of this DomainAgencyServiceV2ModelAgencySummary.


        :param mobile: The mobile of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._mobile = mobile

    @property
    def fax(self):
        """Gets the fax of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The fax of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this DomainAgencyServiceV2ModelAgencySummary.


        :param fax: The fax of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._fax = fax

    @property
    def state(self):
        """Gets the state of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The state of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this DomainAgencyServiceV2ModelAgencySummary.


        :param state: The state of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def description(self):
        """Gets the description of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The description of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DomainAgencyServiceV2ModelAgencySummary.


        :param description: The description of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def email(self):
        """Gets the email of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The email of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this DomainAgencyServiceV2ModelAgencySummary.


        :param email: The email of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def rental_email(self):
        """Gets the rental_email of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The rental_email of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._rental_email

    @rental_email.setter
    def rental_email(self, rental_email):
        """Sets the rental_email of this DomainAgencyServiceV2ModelAgencySummary.


        :param rental_email: The rental_email of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._rental_email = rental_email

    @property
    def home_page_search_options(self):
        """Gets the home_page_search_options of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The home_page_search_options of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._home_page_search_options

    @home_page_search_options.setter
    def home_page_search_options(self, home_page_search_options):
        """Sets the home_page_search_options of this DomainAgencyServiceV2ModelAgencySummary.


        :param home_page_search_options: The home_page_search_options of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._home_page_search_options = home_page_search_options

    @property
    def account_type(self):
        """Gets the account_type of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The account_type of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: int
        """
        return self._account_type

    @account_type.setter
    def account_type(self, account_type):
        """Sets the account_type of this DomainAgencyServiceV2ModelAgencySummary.


        :param account_type: The account_type of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: int
        """

        self._account_type = account_type

    @property
    def number_sold_in_last3_months(self):
        """Gets the number_sold_in_last3_months of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The number_sold_in_last3_months of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: int
        """
        return self._number_sold_in_last3_months

    @number_sold_in_last3_months.setter
    def number_sold_in_last3_months(self, number_sold_in_last3_months):
        """Sets the number_sold_in_last3_months of this DomainAgencyServiceV2ModelAgencySummary.


        :param number_sold_in_last3_months: The number_sold_in_last3_months of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: int
        """

        self._number_sold_in_last3_months = number_sold_in_last3_months

    @property
    def number_for_sale(self):
        """Gets the number_for_sale of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The number_for_sale of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: int
        """
        return self._number_for_sale

    @number_for_sale.setter
    def number_for_sale(self, number_for_sale):
        """Sets the number_for_sale of this DomainAgencyServiceV2ModelAgencySummary.


        :param number_for_sale: The number_for_sale of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: int
        """

        self._number_for_sale = number_for_sale

    @property
    def number_for_rent(self):
        """Gets the number_for_rent of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The number_for_rent of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: int
        """
        return self._number_for_rent

    @number_for_rent.setter
    def number_for_rent(self, number_for_rent):
        """Sets the number_for_rent of this DomainAgencyServiceV2ModelAgencySummary.


        :param number_for_rent: The number_for_rent of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: int
        """

        self._number_for_rent = number_for_rent

    @property
    def domain_url(self):
        """Gets the domain_url of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The domain_url of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: str
        """
        return self._domain_url

    @domain_url.setter
    def domain_url(self, domain_url):
        """Sets the domain_url of this DomainAgencyServiceV2ModelAgencySummary.


        :param domain_url: The domain_url of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: str
        """

        self._domain_url = domain_url

    @property
    def show_tab_sold_last_year(self):
        """Gets the show_tab_sold_last_year of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501


        :return: The show_tab_sold_last_year of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :rtype: bool
        """
        return self._show_tab_sold_last_year

    @show_tab_sold_last_year.setter
    def show_tab_sold_last_year(self, show_tab_sold_last_year):
        """Sets the show_tab_sold_last_year of this DomainAgencyServiceV2ModelAgencySummary.


        :param show_tab_sold_last_year: The show_tab_sold_last_year of this DomainAgencyServiceV2ModelAgencySummary.  # noqa: E501
        :type: bool
        """

        self._show_tab_sold_last_year = show_tab_sold_last_year

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DomainAgencyServiceV2ModelAgencySummary, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DomainAgencyServiceV2ModelAgencySummary):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
