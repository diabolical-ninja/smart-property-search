# coding: utf-8

"""
    Domain Group API V1

    Provides public access to Domain's microservices  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class DomainPublicAdapterWebApiModelsV1ListingsBusinessListing(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'ad': 'DomainPublicAdapterWebApiModelsV1ListingsBusinessAd',
        'price': 'str',
        'advertiser': 'DomainPublicAdapterWebApiModelsV1ListingsBusinessAdvertiser',
        'geo_location': 'DomainPublicAdapterWebApiModelsV1ListingsBusinessGeoLocation',
        'property_area': 'str',
        'property_type': 'str',
        'address': 'str',
        'headline': 'str',
        'has_video': 'bool',
        'media': 'list[DomainPublicAdapterWebApiModelsV1ListingsBusinessMedia]',
        'auction_date': 'str',
        'id': 'int',
        'metadata': 'DomainPublicAdapterWebApiModelsV1ListingsBusinessMetadata',
        'carspace_count': 'int'
    }

    attribute_map = {
        'ad': 'ad',
        'price': 'price',
        'advertiser': 'advertiser',
        'geo_location': 'geoLocation',
        'property_area': 'propertyArea',
        'property_type': 'propertyType',
        'address': 'address',
        'headline': 'headline',
        'has_video': 'hasVideo',
        'media': 'media',
        'auction_date': 'auctionDate',
        'id': 'id',
        'metadata': 'metadata',
        'carspace_count': 'carspaceCount'
    }

    def __init__(self, ad=None, price=None, advertiser=None, geo_location=None, property_area=None, property_type=None, address=None, headline=None, has_video=None, media=None, auction_date=None, id=None, metadata=None, carspace_count=None):  # noqa: E501
        """DomainPublicAdapterWebApiModelsV1ListingsBusinessListing - a model defined in Swagger"""  # noqa: E501

        self._ad = None
        self._price = None
        self._advertiser = None
        self._geo_location = None
        self._property_area = None
        self._property_type = None
        self._address = None
        self._headline = None
        self._has_video = None
        self._media = None
        self._auction_date = None
        self._id = None
        self._metadata = None
        self._carspace_count = None
        self.discriminator = None

        if ad is not None:
            self.ad = ad
        if price is not None:
            self.price = price
        if advertiser is not None:
            self.advertiser = advertiser
        if geo_location is not None:
            self.geo_location = geo_location
        if property_area is not None:
            self.property_area = property_area
        if property_type is not None:
            self.property_type = property_type
        if address is not None:
            self.address = address
        if headline is not None:
            self.headline = headline
        if has_video is not None:
            self.has_video = has_video
        if media is not None:
            self.media = media
        if auction_date is not None:
            self.auction_date = auction_date
        if id is not None:
            self.id = id
        if metadata is not None:
            self.metadata = metadata
        if carspace_count is not None:
            self.carspace_count = carspace_count

    @property
    def ad(self):
        """Gets the ad of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501

        Ad details  # noqa: E501

        :return: The ad of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :rtype: DomainPublicAdapterWebApiModelsV1ListingsBusinessAd
        """
        return self._ad

    @ad.setter
    def ad(self, ad):
        """Sets the ad of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.

        Ad details  # noqa: E501

        :param ad: The ad of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :type: DomainPublicAdapterWebApiModelsV1ListingsBusinessAd
        """

        self._ad = ad

    @property
    def price(self):
        """Gets the price of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501

        Formatted listing price  # noqa: E501

        :return: The price of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :rtype: str
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.

        Formatted listing price  # noqa: E501

        :param price: The price of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :type: str
        """

        self._price = price

    @property
    def advertiser(self):
        """Gets the advertiser of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501

        Listing Agency details  # noqa: E501

        :return: The advertiser of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :rtype: DomainPublicAdapterWebApiModelsV1ListingsBusinessAdvertiser
        """
        return self._advertiser

    @advertiser.setter
    def advertiser(self, advertiser):
        """Sets the advertiser of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.

        Listing Agency details  # noqa: E501

        :param advertiser: The advertiser of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :type: DomainPublicAdapterWebApiModelsV1ListingsBusinessAdvertiser
        """

        self._advertiser = advertiser

    @property
    def geo_location(self):
        """Gets the geo_location of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501

        Listing location coordinates  # noqa: E501

        :return: The geo_location of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :rtype: DomainPublicAdapterWebApiModelsV1ListingsBusinessGeoLocation
        """
        return self._geo_location

    @geo_location.setter
    def geo_location(self, geo_location):
        """Sets the geo_location of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.

        Listing location coordinates  # noqa: E501

        :param geo_location: The geo_location of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :type: DomainPublicAdapterWebApiModelsV1ListingsBusinessGeoLocation
        """

        self._geo_location = geo_location

    @property
    def property_area(self):
        """Gets the property_area of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501

        Building size  # noqa: E501

        :return: The property_area of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :rtype: str
        """
        return self._property_area

    @property_area.setter
    def property_area(self, property_area):
        """Sets the property_area of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.

        Building size  # noqa: E501

        :param property_area: The property_area of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :type: str
        """

        self._property_area = property_area

    @property
    def property_type(self):
        """Gets the property_type of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501

        Property type  # noqa: E501

        :return: The property_type of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :rtype: str
        """
        return self._property_type

    @property_type.setter
    def property_type(self, property_type):
        """Sets the property_type of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.

        Property type  # noqa: E501

        :param property_type: The property_type of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :type: str
        """

        self._property_type = property_type

    @property
    def address(self):
        """Gets the address of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501

        Full address  # noqa: E501

        :return: The address of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.

        Full address  # noqa: E501

        :param address: The address of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def headline(self):
        """Gets the headline of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501

        Headline  # noqa: E501

        :return: The headline of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :rtype: str
        """
        return self._headline

    @headline.setter
    def headline(self, headline):
        """Sets the headline of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.

        Headline  # noqa: E501

        :param headline: The headline of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :type: str
        """

        self._headline = headline

    @property
    def has_video(self):
        """Gets the has_video of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501

        Has video?  # noqa: E501

        :return: The has_video of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :rtype: bool
        """
        return self._has_video

    @has_video.setter
    def has_video(self, has_video):
        """Sets the has_video of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.

        Has video?  # noqa: E501

        :param has_video: The has_video of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :type: bool
        """

        self._has_video = has_video

    @property
    def media(self):
        """Gets the media of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501

        Media resources for listing (images, video, floor plans)  # noqa: E501

        :return: The media of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :rtype: list[DomainPublicAdapterWebApiModelsV1ListingsBusinessMedia]
        """
        return self._media

    @media.setter
    def media(self, media):
        """Sets the media of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.

        Media resources for listing (images, video, floor plans)  # noqa: E501

        :param media: The media of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :type: list[DomainPublicAdapterWebApiModelsV1ListingsBusinessMedia]
        """

        self._media = media

    @property
    def auction_date(self):
        """Gets the auction_date of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501

        Auction date  # noqa: E501

        :return: The auction_date of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :rtype: str
        """
        return self._auction_date

    @auction_date.setter
    def auction_date(self, auction_date):
        """Sets the auction_date of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.

        Auction date  # noqa: E501

        :param auction_date: The auction_date of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :type: str
        """

        self._auction_date = auction_date

    @property
    def id(self):
        """Gets the id of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501

        AdID  # noqa: E501

        :return: The id of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.

        AdID  # noqa: E501

        :param id: The id of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def metadata(self):
        """Gets the metadata of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501

        Listing metadata  # noqa: E501

        :return: The metadata of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :rtype: DomainPublicAdapterWebApiModelsV1ListingsBusinessMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.

        Listing metadata  # noqa: E501

        :param metadata: The metadata of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :type: DomainPublicAdapterWebApiModelsV1ListingsBusinessMetadata
        """

        self._metadata = metadata

    @property
    def carspace_count(self):
        """Gets the carspace_count of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501

        Car parking spaces count  # noqa: E501

        :return: The carspace_count of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :rtype: int
        """
        return self._carspace_count

    @carspace_count.setter
    def carspace_count(self, carspace_count):
        """Sets the carspace_count of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.

        Car parking spaces count  # noqa: E501

        :param carspace_count: The carspace_count of this DomainPublicAdapterWebApiModelsV1ListingsBusinessListing.  # noqa: E501
        :type: int
        """

        self._carspace_count = carspace_count

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DomainPublicAdapterWebApiModelsV1ListingsBusinessListing, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DomainPublicAdapterWebApiModelsV1ListingsBusinessListing):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
