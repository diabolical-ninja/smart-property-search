# coding: utf-8

"""
    Domain Group API V1

    Provides public access to Domain's microservices  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'promo_level': 'str',
        'listing_type': 'str',
        'id': 'int',
        'project_id': 'int',
        'advertiser': 'DomainSearchServiceV2ModelDomainSearchContractsV2Advertiser',
        'price_details': 'DomainSearchServiceV2ModelDomainSearchContractsV2PriceDetails',
        'media': 'list[DomainSearchServiceV2ModelDomainSearchContractsV2Media]',
        'property_details': 'DomainSearchServiceV2ModelDomainSearchContractsV2PropertyDetails',
        'headline': 'str',
        'summary_description': 'str',
        'has_floorplan': 'bool',
        'has_video': 'bool',
        'labels': 'list[str]',
        'auction_schedule': 'DomainSearchServiceV2ModelDomainSearchContractsV2AuctionSchedule',
        'date_available': 'datetime',
        'date_listed': 'datetime',
        'inspection_schedule': 'DomainSearchServiceV2ModelDomainSearchContractsV2InspectionSchedule',
        'sold_data': 'DomainSearchServiceV2ModelDomainSearchContractsV2SoldData',
        'listing_slug': 'str'
    }

    attribute_map = {
        'promo_level': 'promoLevel',
        'listing_type': 'listingType',
        'id': 'id',
        'project_id': 'projectId',
        'advertiser': 'advertiser',
        'price_details': 'priceDetails',
        'media': 'media',
        'property_details': 'propertyDetails',
        'headline': 'headline',
        'summary_description': 'summaryDescription',
        'has_floorplan': 'hasFloorplan',
        'has_video': 'hasVideo',
        'labels': 'labels',
        'auction_schedule': 'auctionSchedule',
        'date_available': 'dateAvailable',
        'date_listed': 'dateListed',
        'inspection_schedule': 'inspectionSchedule',
        'sold_data': 'soldData',
        'listing_slug': 'listingSlug'
    }

    def __init__(self, promo_level=None, listing_type=None, id=None, project_id=None, advertiser=None, price_details=None, media=None, property_details=None, headline=None, summary_description=None, has_floorplan=None, has_video=None, labels=None, auction_schedule=None, date_available=None, date_listed=None, inspection_schedule=None, sold_data=None, listing_slug=None):  # noqa: E501
        """DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing - a model defined in Swagger"""  # noqa: E501

        self._promo_level = None
        self._listing_type = None
        self._id = None
        self._project_id = None
        self._advertiser = None
        self._price_details = None
        self._media = None
        self._property_details = None
        self._headline = None
        self._summary_description = None
        self._has_floorplan = None
        self._has_video = None
        self._labels = None
        self._auction_schedule = None
        self._date_available = None
        self._date_listed = None
        self._inspection_schedule = None
        self._sold_data = None
        self._listing_slug = None
        self.discriminator = None

        if promo_level is not None:
            self.promo_level = promo_level
        if listing_type is not None:
            self.listing_type = listing_type
        if id is not None:
            self.id = id
        if project_id is not None:
            self.project_id = project_id
        if advertiser is not None:
            self.advertiser = advertiser
        if price_details is not None:
            self.price_details = price_details
        if media is not None:
            self.media = media
        if property_details is not None:
            self.property_details = property_details
        if headline is not None:
            self.headline = headline
        if summary_description is not None:
            self.summary_description = summary_description
        if has_floorplan is not None:
            self.has_floorplan = has_floorplan
        if has_video is not None:
            self.has_video = has_video
        if labels is not None:
            self.labels = labels
        if auction_schedule is not None:
            self.auction_schedule = auction_schedule
        if date_available is not None:
            self.date_available = date_available
        if date_listed is not None:
            self.date_listed = date_listed
        if inspection_schedule is not None:
            self.inspection_schedule = inspection_schedule
        if sold_data is not None:
            self.sold_data = sold_data
        if listing_slug is not None:
            self.listing_slug = listing_slug

    @property
    def promo_level(self):
        """Gets the promo_level of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The promo_level of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: str
        """
        return self._promo_level

    @promo_level.setter
    def promo_level(self, promo_level):
        """Sets the promo_level of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param promo_level: The promo_level of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: str
        """
        allowed_values = ["Standard", "StandardPP", "Elite", "ElitePP", "PremiumPlus"]  # noqa: E501
        if promo_level not in allowed_values:
            raise ValueError(
                "Invalid value for `promo_level` ({0}), must be one of {1}"  # noqa: E501
                .format(promo_level, allowed_values)
            )

        self._promo_level = promo_level

    @property
    def listing_type(self):
        """Gets the listing_type of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The listing_type of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: str
        """
        return self._listing_type

    @listing_type.setter
    def listing_type(self, listing_type):
        """Sets the listing_type of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param listing_type: The listing_type of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: str
        """
        allowed_values = ["Sale", "Rent", "Share", "Sold", "NewHomes"]  # noqa: E501
        if listing_type not in allowed_values:
            raise ValueError(
                "Invalid value for `listing_type` ({0}), must be one of {1}"  # noqa: E501
                .format(listing_type, allowed_values)
            )

        self._listing_type = listing_type

    @property
    def id(self):
        """Gets the id of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The id of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param id: The id of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def project_id(self):
        """Gets the project_id of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The project_id of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: int
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param project_id: The project_id of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: int
        """

        self._project_id = project_id

    @property
    def advertiser(self):
        """Gets the advertiser of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The advertiser of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: DomainSearchServiceV2ModelDomainSearchContractsV2Advertiser
        """
        return self._advertiser

    @advertiser.setter
    def advertiser(self, advertiser):
        """Sets the advertiser of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param advertiser: The advertiser of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: DomainSearchServiceV2ModelDomainSearchContractsV2Advertiser
        """

        self._advertiser = advertiser

    @property
    def price_details(self):
        """Gets the price_details of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The price_details of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: DomainSearchServiceV2ModelDomainSearchContractsV2PriceDetails
        """
        return self._price_details

    @price_details.setter
    def price_details(self, price_details):
        """Sets the price_details of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param price_details: The price_details of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: DomainSearchServiceV2ModelDomainSearchContractsV2PriceDetails
        """

        self._price_details = price_details

    @property
    def media(self):
        """Gets the media of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The media of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: list[DomainSearchServiceV2ModelDomainSearchContractsV2Media]
        """
        return self._media

    @media.setter
    def media(self, media):
        """Sets the media of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param media: The media of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: list[DomainSearchServiceV2ModelDomainSearchContractsV2Media]
        """

        self._media = media

    @property
    def property_details(self):
        """Gets the property_details of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The property_details of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: DomainSearchServiceV2ModelDomainSearchContractsV2PropertyDetails
        """
        return self._property_details

    @property_details.setter
    def property_details(self, property_details):
        """Sets the property_details of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param property_details: The property_details of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: DomainSearchServiceV2ModelDomainSearchContractsV2PropertyDetails
        """

        self._property_details = property_details

    @property
    def headline(self):
        """Gets the headline of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The headline of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: str
        """
        return self._headline

    @headline.setter
    def headline(self, headline):
        """Sets the headline of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param headline: The headline of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: str
        """

        self._headline = headline

    @property
    def summary_description(self):
        """Gets the summary_description of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The summary_description of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: str
        """
        return self._summary_description

    @summary_description.setter
    def summary_description(self, summary_description):
        """Sets the summary_description of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param summary_description: The summary_description of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: str
        """

        self._summary_description = summary_description

    @property
    def has_floorplan(self):
        """Gets the has_floorplan of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The has_floorplan of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: bool
        """
        return self._has_floorplan

    @has_floorplan.setter
    def has_floorplan(self, has_floorplan):
        """Sets the has_floorplan of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param has_floorplan: The has_floorplan of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: bool
        """

        self._has_floorplan = has_floorplan

    @property
    def has_video(self):
        """Gets the has_video of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The has_video of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: bool
        """
        return self._has_video

    @has_video.setter
    def has_video(self, has_video):
        """Sets the has_video of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param has_video: The has_video of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: bool
        """

        self._has_video = has_video

    @property
    def labels(self):
        """Gets the labels of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The labels of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: list[str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param labels: The labels of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: list[str]
        """

        self._labels = labels

    @property
    def auction_schedule(self):
        """Gets the auction_schedule of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The auction_schedule of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: DomainSearchServiceV2ModelDomainSearchContractsV2AuctionSchedule
        """
        return self._auction_schedule

    @auction_schedule.setter
    def auction_schedule(self, auction_schedule):
        """Sets the auction_schedule of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param auction_schedule: The auction_schedule of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: DomainSearchServiceV2ModelDomainSearchContractsV2AuctionSchedule
        """

        self._auction_schedule = auction_schedule

    @property
    def date_available(self):
        """Gets the date_available of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The date_available of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: datetime
        """
        return self._date_available

    @date_available.setter
    def date_available(self, date_available):
        """Sets the date_available of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param date_available: The date_available of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: datetime
        """

        self._date_available = date_available

    @property
    def date_listed(self):
        """Gets the date_listed of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The date_listed of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: datetime
        """
        return self._date_listed

    @date_listed.setter
    def date_listed(self, date_listed):
        """Sets the date_listed of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param date_listed: The date_listed of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: datetime
        """

        self._date_listed = date_listed

    @property
    def inspection_schedule(self):
        """Gets the inspection_schedule of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The inspection_schedule of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: DomainSearchServiceV2ModelDomainSearchContractsV2InspectionSchedule
        """
        return self._inspection_schedule

    @inspection_schedule.setter
    def inspection_schedule(self, inspection_schedule):
        """Sets the inspection_schedule of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param inspection_schedule: The inspection_schedule of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: DomainSearchServiceV2ModelDomainSearchContractsV2InspectionSchedule
        """

        self._inspection_schedule = inspection_schedule

    @property
    def sold_data(self):
        """Gets the sold_data of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The sold_data of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: DomainSearchServiceV2ModelDomainSearchContractsV2SoldData
        """
        return self._sold_data

    @sold_data.setter
    def sold_data(self, sold_data):
        """Sets the sold_data of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param sold_data: The sold_data of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: DomainSearchServiceV2ModelDomainSearchContractsV2SoldData
        """

        self._sold_data = sold_data

    @property
    def listing_slug(self):
        """Gets the listing_slug of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501


        :return: The listing_slug of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :rtype: str
        """
        return self._listing_slug

    @listing_slug.setter
    def listing_slug(self, listing_slug):
        """Sets the listing_slug of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.


        :param listing_slug: The listing_slug of this DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing.  # noqa: E501
        :type: str
        """

        self._listing_slug = listing_slug

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DomainSearchServiceV2ModelDomainSearchContractsV2PropertyListing):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
