# coding: utf-8

"""
    Domain Group API V1

    Provides public access to Domain's microservices  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'project_profile_type': 'str',
        'property_types': 'list[str]',
        'id': 'int',
        'name': 'str',
        'start_date': 'datetime',
        'end_date': 'datetime',
        'address': 'DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectAddressParts',
        'viewing_address': 'DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectAddressParts',
        'displayable_address': 'DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectAddressParts',
        'enquiry_email_address': 'str',
        'advertiser_identifiers': 'DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsListingAdvertiserIdentifiers',
        'provider_details': 'DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsListingProviderDetails',
        'media': 'list[DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectMedia]',
        'project_url': 'str',
        'headline': 'str',
        'tagline': 'str',
        'display_as_last_updated': 'datetime',
        'modified_by': 'str',
        'modified_date': 'datetime',
        'created_by': 'str',
        'created_date': 'datetime',
        'background_colour': 'str',
        'description': 'str',
        'appointment_required': 'bool',
        'features': 'list[str]',
        'price_from': 'float',
        'price_to': 'float',
        'banner_url': 'str',
        'big_banner_url': 'str',
        'small_banner_url': 'str',
        'logo_url': 'str',
        'pdfs': 'list[DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsPdfUpload]',
        'inspection_details': 'DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsListingPropertyInspections',
        'number_of_floors': 'int',
        'number_of_apartments': 'int',
        'estimated_completion_date': 'datetime',
        'starting_price': 'float',
        'is_active': 'bool'
    }

    attribute_map = {
        'project_profile_type': 'projectProfileType',
        'property_types': 'propertyTypes',
        'id': 'id',
        'name': 'name',
        'start_date': 'startDate',
        'end_date': 'endDate',
        'address': 'address',
        'viewing_address': 'viewingAddress',
        'displayable_address': 'displayableAddress',
        'enquiry_email_address': 'enquiryEmailAddress',
        'advertiser_identifiers': 'advertiserIdentifiers',
        'provider_details': 'providerDetails',
        'media': 'media',
        'project_url': 'projectUrl',
        'headline': 'headline',
        'tagline': 'tagline',
        'display_as_last_updated': 'displayAsLastUpdated',
        'modified_by': 'modifiedBy',
        'modified_date': 'modifiedDate',
        'created_by': 'createdBy',
        'created_date': 'createdDate',
        'background_colour': 'backgroundColour',
        'description': 'description',
        'appointment_required': 'appointmentRequired',
        'features': 'features',
        'price_from': 'priceFrom',
        'price_to': 'priceTo',
        'banner_url': 'bannerUrl',
        'big_banner_url': 'bigBannerUrl',
        'small_banner_url': 'smallBannerUrl',
        'logo_url': 'logoUrl',
        'pdfs': 'pdfs',
        'inspection_details': 'inspectionDetails',
        'number_of_floors': 'numberOfFloors',
        'number_of_apartments': 'numberOfApartments',
        'estimated_completion_date': 'estimatedCompletionDate',
        'starting_price': 'startingPrice',
        'is_active': 'isActive'
    }

    def __init__(self, project_profile_type=None, property_types=None, id=None, name=None, start_date=None, end_date=None, address=None, viewing_address=None, displayable_address=None, enquiry_email_address=None, advertiser_identifiers=None, provider_details=None, media=None, project_url=None, headline=None, tagline=None, display_as_last_updated=None, modified_by=None, modified_date=None, created_by=None, created_date=None, background_colour=None, description=None, appointment_required=None, features=None, price_from=None, price_to=None, banner_url=None, big_banner_url=None, small_banner_url=None, logo_url=None, pdfs=None, inspection_details=None, number_of_floors=None, number_of_apartments=None, estimated_completion_date=None, starting_price=None, is_active=None):  # noqa: E501
        """DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2 - a model defined in Swagger"""  # noqa: E501

        self._project_profile_type = None
        self._property_types = None
        self._id = None
        self._name = None
        self._start_date = None
        self._end_date = None
        self._address = None
        self._viewing_address = None
        self._displayable_address = None
        self._enquiry_email_address = None
        self._advertiser_identifiers = None
        self._provider_details = None
        self._media = None
        self._project_url = None
        self._headline = None
        self._tagline = None
        self._display_as_last_updated = None
        self._modified_by = None
        self._modified_date = None
        self._created_by = None
        self._created_date = None
        self._background_colour = None
        self._description = None
        self._appointment_required = None
        self._features = None
        self._price_from = None
        self._price_to = None
        self._banner_url = None
        self._big_banner_url = None
        self._small_banner_url = None
        self._logo_url = None
        self._pdfs = None
        self._inspection_details = None
        self._number_of_floors = None
        self._number_of_apartments = None
        self._estimated_completion_date = None
        self._starting_price = None
        self._is_active = None
        self.discriminator = None

        if project_profile_type is not None:
            self.project_profile_type = project_profile_type
        if property_types is not None:
            self.property_types = property_types
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if start_date is not None:
            self.start_date = start_date
        if end_date is not None:
            self.end_date = end_date
        if address is not None:
            self.address = address
        if viewing_address is not None:
            self.viewing_address = viewing_address
        if displayable_address is not None:
            self.displayable_address = displayable_address
        if enquiry_email_address is not None:
            self.enquiry_email_address = enquiry_email_address
        if advertiser_identifiers is not None:
            self.advertiser_identifiers = advertiser_identifiers
        if provider_details is not None:
            self.provider_details = provider_details
        if media is not None:
            self.media = media
        if project_url is not None:
            self.project_url = project_url
        if headline is not None:
            self.headline = headline
        if tagline is not None:
            self.tagline = tagline
        if display_as_last_updated is not None:
            self.display_as_last_updated = display_as_last_updated
        if modified_by is not None:
            self.modified_by = modified_by
        if modified_date is not None:
            self.modified_date = modified_date
        if created_by is not None:
            self.created_by = created_by
        if created_date is not None:
            self.created_date = created_date
        if background_colour is not None:
            self.background_colour = background_colour
        if description is not None:
            self.description = description
        if appointment_required is not None:
            self.appointment_required = appointment_required
        if features is not None:
            self.features = features
        if price_from is not None:
            self.price_from = price_from
        if price_to is not None:
            self.price_to = price_to
        if banner_url is not None:
            self.banner_url = banner_url
        if big_banner_url is not None:
            self.big_banner_url = big_banner_url
        if small_banner_url is not None:
            self.small_banner_url = small_banner_url
        if logo_url is not None:
            self.logo_url = logo_url
        if pdfs is not None:
            self.pdfs = pdfs
        if inspection_details is not None:
            self.inspection_details = inspection_details
        if number_of_floors is not None:
            self.number_of_floors = number_of_floors
        if number_of_apartments is not None:
            self.number_of_apartments = number_of_apartments
        if estimated_completion_date is not None:
            self.estimated_completion_date = estimated_completion_date
        if starting_price is not None:
            self.starting_price = starting_price
        if is_active is not None:
            self.is_active = is_active

    @property
    def project_profile_type(self):
        """Gets the project_profile_type of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The project_profile_type of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: str
        """
        return self._project_profile_type

    @project_profile_type.setter
    def project_profile_type(self, project_profile_type):
        """Sets the project_profile_type of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param project_profile_type: The project_profile_type of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: str
        """
        allowed_values = ["noProfile", "projectProfileStandard", "projectProfilePremium"]  # noqa: E501
        if project_profile_type not in allowed_values:
            raise ValueError(
                "Invalid value for `project_profile_type` ({0}), must be one of {1}"  # noqa: E501
                .format(project_profile_type, allowed_values)
            )

        self._project_profile_type = project_profile_type

    @property
    def property_types(self):
        """Gets the property_types of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The property_types of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: list[str]
        """
        return self._property_types

    @property_types.setter
    def property_types(self, property_types):
        """Sets the property_types of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param property_types: The property_types of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: list[str]
        """
        allowed_values = ["unknown", "accessoriesParts", "accommodationTourism", "accounting", "acreageSemiRural", "adult", "advertisingMarketing", "aerial", "aeronautical", "agedCare", "agricultural", "air", "aircraft", "alarms", "alcoholLiquor", "amusements", "animalRelated", "apartmentUnitFlat", "aquaculture", "aquaticMarineMarinaBerth", "artsCrafts", "autoElectrical", "automotive", "backpackerHostel", "bakery", "barsNightclubs", "beautyHealth", "beautyProducts", "beautySalon", "bikeAndMotorcycle", "blockOfUnits", "boardingKennels", "boatsMarineMarinaBerth", "bookkeeping", "brokerage", "builder", "buildingAndConstruction", "bus", "butcher", "cafeCoffeeShop", "car", "carBusTruck", "carDealership", "carRental", "carspace", "carWash", "caravanPark", "carpenter", "catering", "childCare", "civil", "cleaning", "cleaningAndMaintenance", "clinicalPractice", "clothingAccessories", "clothingFootwear", "communication", "communications", "computerIT", "computerAndInternet", "construction", "convenienceStore", "copyLaminate", "courier", "cropHarvesting", "customs", "dairyFarming", "deli", "dental", "detailing", "developmentLand", "developmentSite", "distributors", "drivingSchools", "duplex", "educationTraining", "educational", "electrical", "employmentRecruitment", "entertainment", "entertainmentTechnology", "export", "farm", "farming", "fertiliser", "finance", "financialServices", "fishingForestry", "floristNursery", "foodBeverage", "foodBeverageHospitality", "franchiseBusinessOpportunities", "freight", "fruitVegFreshProduce", "fruitPicking", "functionCentre", "furnitureTimber", "gambling", "gardenHousehold", "gardenNurseries", "gardening", "glassCeramic", "guestHouseBB", "hairdresser", "healthBeauty", "healthSpa", "hire", "homeGarden", "homeBased", "newHomeDesigns", "homewareHardware", "hospital", "hotel", "hotelLeisure", "house", "newHouseLand", "huntingTrap", "import", "importExportWholesale", "industrialManufacturing", "industrialWarehouse", "insemination", "insurance", "internet", "irrigationServices", "juiceBar", "landClearing", "newLand", "landscaping", "laundryDryCleaning", "legal", "leisureEntertainment", "limousineTaxi", "livestock", "international", "machinery", "machineryMetal", "managementRights", "manufacturers", "manufacturingEngineering", "marine", "massage", "mechanicalRepair", "media", "medical", "medicalConsulting", "medicalPractice", "miningEarthMoving", "mobileServices", "motel", "motorcycle", "musicRelated", "mustering", "nails", "naturalTherapies", "newApartments", "newsagency", "nursery", "nursingHome", "offices", "officeSupplies", "oilGas", "panelBeating", "paperPrinting", "parkingCarSpace", "penthouse", "pestRelated", "pharmacies", "plastic", "plumbing", "poolWater", "postOffices", "printPhoto", "professional", "propertyRealEstate", "rail", "recreationSport", "recruitment", "repair", "resort", "restaurant", "retail", "retailer", "retirement", "retirementVillage", "road", "rural", "ruralCommercialFarming", "scientific", "sea", "security", "semiDetached", "serviceStation", "services", "shearing", "showroomsBulkyGoods", "specialistFarm", "sportsComplexGym", "studio", "supermarket", "takeawayFood", "taxi", "terrace", "themePark", "tours", "townhouse", "training", "transportDistribution", "travel", "truck", "vacantLand", "vending", "villa", "water", "welding", "wholesale", "wholesalers", "woolClassing", "wreckers", "servicedOffices", "other", "alcoholGrocery", "cafeRestaurants", "discountStore", "ecoFriendly", "green", "grocery", "specialityRetail", "storage", "travelAgency", "varietyStore", "chickenShop", "seafoodShop", "deliCafe", "cropping", "viticulture", "mixedFarming", "grazing", "horticulture", "equine", "farmlet", "orchard", "ruralLifestyle", "onlineBusiness"]  # noqa: E501
        if not set(property_types).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `property_types` [{0}], must be a subset of [{1}]"  # noqa: E501
                .format(", ".join(map(str, set(property_types) - set(allowed_values))),  # noqa: E501
                        ", ".join(map(str, allowed_values)))
            )

        self._property_types = property_types

    @property
    def id(self):
        """Gets the id of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The id of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param id: The id of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The name of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param name: The name of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def start_date(self):
        """Gets the start_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The start_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param start_date: The start_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: datetime
        """

        self._start_date = start_date

    @property
    def end_date(self):
        """Gets the end_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The end_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param end_date: The end_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: datetime
        """

        self._end_date = end_date

    @property
    def address(self):
        """Gets the address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectAddressParts
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param address: The address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectAddressParts
        """

        self._address = address

    @property
    def viewing_address(self):
        """Gets the viewing_address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The viewing_address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectAddressParts
        """
        return self._viewing_address

    @viewing_address.setter
    def viewing_address(self, viewing_address):
        """Sets the viewing_address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param viewing_address: The viewing_address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectAddressParts
        """

        self._viewing_address = viewing_address

    @property
    def displayable_address(self):
        """Gets the displayable_address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The displayable_address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectAddressParts
        """
        return self._displayable_address

    @displayable_address.setter
    def displayable_address(self, displayable_address):
        """Sets the displayable_address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param displayable_address: The displayable_address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectAddressParts
        """

        self._displayable_address = displayable_address

    @property
    def enquiry_email_address(self):
        """Gets the enquiry_email_address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The enquiry_email_address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: str
        """
        return self._enquiry_email_address

    @enquiry_email_address.setter
    def enquiry_email_address(self, enquiry_email_address):
        """Sets the enquiry_email_address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param enquiry_email_address: The enquiry_email_address of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: str
        """

        self._enquiry_email_address = enquiry_email_address

    @property
    def advertiser_identifiers(self):
        """Gets the advertiser_identifiers of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The advertiser_identifiers of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsListingAdvertiserIdentifiers
        """
        return self._advertiser_identifiers

    @advertiser_identifiers.setter
    def advertiser_identifiers(self, advertiser_identifiers):
        """Sets the advertiser_identifiers of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param advertiser_identifiers: The advertiser_identifiers of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsListingAdvertiserIdentifiers
        """

        self._advertiser_identifiers = advertiser_identifiers

    @property
    def provider_details(self):
        """Gets the provider_details of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The provider_details of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsListingProviderDetails
        """
        return self._provider_details

    @provider_details.setter
    def provider_details(self, provider_details):
        """Sets the provider_details of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param provider_details: The provider_details of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsListingProviderDetails
        """

        self._provider_details = provider_details

    @property
    def media(self):
        """Gets the media of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The media of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: list[DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectMedia]
        """
        return self._media

    @media.setter
    def media(self, media):
        """Sets the media of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param media: The media of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: list[DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectMedia]
        """

        self._media = media

    @property
    def project_url(self):
        """Gets the project_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The project_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: str
        """
        return self._project_url

    @project_url.setter
    def project_url(self, project_url):
        """Sets the project_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param project_url: The project_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: str
        """

        self._project_url = project_url

    @property
    def headline(self):
        """Gets the headline of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The headline of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: str
        """
        return self._headline

    @headline.setter
    def headline(self, headline):
        """Sets the headline of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param headline: The headline of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: str
        """

        self._headline = headline

    @property
    def tagline(self):
        """Gets the tagline of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The tagline of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: str
        """
        return self._tagline

    @tagline.setter
    def tagline(self, tagline):
        """Sets the tagline of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param tagline: The tagline of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: str
        """

        self._tagline = tagline

    @property
    def display_as_last_updated(self):
        """Gets the display_as_last_updated of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The display_as_last_updated of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: datetime
        """
        return self._display_as_last_updated

    @display_as_last_updated.setter
    def display_as_last_updated(self, display_as_last_updated):
        """Sets the display_as_last_updated of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param display_as_last_updated: The display_as_last_updated of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: datetime
        """

        self._display_as_last_updated = display_as_last_updated

    @property
    def modified_by(self):
        """Gets the modified_by of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The modified_by of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: str
        """
        return self._modified_by

    @modified_by.setter
    def modified_by(self, modified_by):
        """Sets the modified_by of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param modified_by: The modified_by of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: str
        """

        self._modified_by = modified_by

    @property
    def modified_date(self):
        """Gets the modified_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The modified_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: datetime
        """
        return self._modified_date

    @modified_date.setter
    def modified_date(self, modified_date):
        """Sets the modified_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param modified_date: The modified_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: datetime
        """

        self._modified_date = modified_date

    @property
    def created_by(self):
        """Gets the created_by of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The created_by of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param created_by: The created_by of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: str
        """

        self._created_by = created_by

    @property
    def created_date(self):
        """Gets the created_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The created_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param created_date: The created_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: datetime
        """

        self._created_date = created_date

    @property
    def background_colour(self):
        """Gets the background_colour of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The background_colour of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: str
        """
        return self._background_colour

    @background_colour.setter
    def background_colour(self, background_colour):
        """Sets the background_colour of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param background_colour: The background_colour of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: str
        """

        self._background_colour = background_colour

    @property
    def description(self):
        """Gets the description of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The description of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param description: The description of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def appointment_required(self):
        """Gets the appointment_required of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The appointment_required of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: bool
        """
        return self._appointment_required

    @appointment_required.setter
    def appointment_required(self, appointment_required):
        """Sets the appointment_required of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param appointment_required: The appointment_required of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: bool
        """

        self._appointment_required = appointment_required

    @property
    def features(self):
        """Gets the features of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The features of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: list[str]
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param features: The features of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: list[str]
        """

        self._features = features

    @property
    def price_from(self):
        """Gets the price_from of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The price_from of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: float
        """
        return self._price_from

    @price_from.setter
    def price_from(self, price_from):
        """Sets the price_from of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param price_from: The price_from of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: float
        """

        self._price_from = price_from

    @property
    def price_to(self):
        """Gets the price_to of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The price_to of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: float
        """
        return self._price_to

    @price_to.setter
    def price_to(self, price_to):
        """Sets the price_to of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param price_to: The price_to of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: float
        """

        self._price_to = price_to

    @property
    def banner_url(self):
        """Gets the banner_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The banner_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: str
        """
        return self._banner_url

    @banner_url.setter
    def banner_url(self, banner_url):
        """Sets the banner_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param banner_url: The banner_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: str
        """

        self._banner_url = banner_url

    @property
    def big_banner_url(self):
        """Gets the big_banner_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The big_banner_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: str
        """
        return self._big_banner_url

    @big_banner_url.setter
    def big_banner_url(self, big_banner_url):
        """Sets the big_banner_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param big_banner_url: The big_banner_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: str
        """

        self._big_banner_url = big_banner_url

    @property
    def small_banner_url(self):
        """Gets the small_banner_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The small_banner_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: str
        """
        return self._small_banner_url

    @small_banner_url.setter
    def small_banner_url(self, small_banner_url):
        """Sets the small_banner_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param small_banner_url: The small_banner_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: str
        """

        self._small_banner_url = small_banner_url

    @property
    def logo_url(self):
        """Gets the logo_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The logo_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: str
        """
        return self._logo_url

    @logo_url.setter
    def logo_url(self, logo_url):
        """Sets the logo_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param logo_url: The logo_url of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: str
        """

        self._logo_url = logo_url

    @property
    def pdfs(self):
        """Gets the pdfs of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The pdfs of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: list[DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsPdfUpload]
        """
        return self._pdfs

    @pdfs.setter
    def pdfs(self, pdfs):
        """Sets the pdfs of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param pdfs: The pdfs of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: list[DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsPdfUpload]
        """

        self._pdfs = pdfs

    @property
    def inspection_details(self):
        """Gets the inspection_details of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The inspection_details of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsListingPropertyInspections
        """
        return self._inspection_details

    @inspection_details.setter
    def inspection_details(self, inspection_details):
        """Sets the inspection_details of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param inspection_details: The inspection_details of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsListingPropertyInspections
        """

        self._inspection_details = inspection_details

    @property
    def number_of_floors(self):
        """Gets the number_of_floors of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The number_of_floors of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: int
        """
        return self._number_of_floors

    @number_of_floors.setter
    def number_of_floors(self, number_of_floors):
        """Sets the number_of_floors of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param number_of_floors: The number_of_floors of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: int
        """

        self._number_of_floors = number_of_floors

    @property
    def number_of_apartments(self):
        """Gets the number_of_apartments of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The number_of_apartments of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: int
        """
        return self._number_of_apartments

    @number_of_apartments.setter
    def number_of_apartments(self, number_of_apartments):
        """Sets the number_of_apartments of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param number_of_apartments: The number_of_apartments of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: int
        """

        self._number_of_apartments = number_of_apartments

    @property
    def estimated_completion_date(self):
        """Gets the estimated_completion_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The estimated_completion_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: datetime
        """
        return self._estimated_completion_date

    @estimated_completion_date.setter
    def estimated_completion_date(self, estimated_completion_date):
        """Sets the estimated_completion_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param estimated_completion_date: The estimated_completion_date of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: datetime
        """

        self._estimated_completion_date = estimated_completion_date

    @property
    def starting_price(self):
        """Gets the starting_price of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The starting_price of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: float
        """
        return self._starting_price

    @starting_price.setter
    def starting_price(self, starting_price):
        """Sets the starting_price of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param starting_price: The starting_price of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: float
        """

        self._starting_price = starting_price

    @property
    def is_active(self):
        """Gets the is_active of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501


        :return: The is_active of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.


        :param is_active: The is_active of this DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2.  # noqa: E501
        :type: bool
        """

        self._is_active = is_active

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DomainListingsServiceV2ModelDomainListingsApiModelQueryResultsProjectsProjectV2):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
