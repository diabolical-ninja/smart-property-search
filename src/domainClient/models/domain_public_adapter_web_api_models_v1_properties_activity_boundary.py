# coding: utf-8

"""
    Domain Group API V1

    Provides public access to Domain's microservices  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'listing_id': 'int',
        'advertised_date': 'datetime',
        'advertised_price': 'int',
        'agency': 'str',
        'agency_colour': 'str',
        'agency_id': 'int',
        'agency_logo': 'str',
        'agency_url': 'str',
        'apm_agency_id': 'int',
        'source': 'str',
        'suppress_details': 'bool',
        'suppress_price': 'bool',
        'type': 'str',
        'url': 'str'
    }

    attribute_map = {
        'listing_id': 'listingId',
        'advertised_date': 'advertisedDate',
        'advertised_price': 'advertisedPrice',
        'agency': 'agency',
        'agency_colour': 'agencyColour',
        'agency_id': 'agencyId',
        'agency_logo': 'agencyLogo',
        'agency_url': 'agencyUrl',
        'apm_agency_id': 'apmAgencyId',
        'source': 'source',
        'suppress_details': 'suppressDetails',
        'suppress_price': 'suppressPrice',
        'type': 'type',
        'url': 'url'
    }

    def __init__(self, listing_id=None, advertised_date=None, advertised_price=None, agency=None, agency_colour=None, agency_id=None, agency_logo=None, agency_url=None, apm_agency_id=None, source=None, suppress_details=None, suppress_price=None, type=None, url=None):  # noqa: E501
        """DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary - a model defined in Swagger"""  # noqa: E501

        self._listing_id = None
        self._advertised_date = None
        self._advertised_price = None
        self._agency = None
        self._agency_colour = None
        self._agency_id = None
        self._agency_logo = None
        self._agency_url = None
        self._apm_agency_id = None
        self._source = None
        self._suppress_details = None
        self._suppress_price = None
        self._type = None
        self._url = None
        self.discriminator = None

        if listing_id is not None:
            self.listing_id = listing_id
        if advertised_date is not None:
            self.advertised_date = advertised_date
        if advertised_price is not None:
            self.advertised_price = advertised_price
        if agency is not None:
            self.agency = agency
        if agency_colour is not None:
            self.agency_colour = agency_colour
        if agency_id is not None:
            self.agency_id = agency_id
        if agency_logo is not None:
            self.agency_logo = agency_logo
        if agency_url is not None:
            self.agency_url = agency_url
        if apm_agency_id is not None:
            self.apm_agency_id = apm_agency_id
        if source is not None:
            self.source = source
        if suppress_details is not None:
            self.suppress_details = suppress_details
        if suppress_price is not None:
            self.suppress_price = suppress_price
        if type is not None:
            self.type = type
        if url is not None:
            self.url = url

    @property
    def listing_id(self):
        """Gets the listing_id of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501

        Gets the listing identifier.  # noqa: E501

        :return: The listing_id of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :rtype: int
        """
        return self._listing_id

    @listing_id.setter
    def listing_id(self, listing_id):
        """Sets the listing_id of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.

        Gets the listing identifier.  # noqa: E501

        :param listing_id: The listing_id of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :type: int
        """

        self._listing_id = listing_id

    @property
    def advertised_date(self):
        """Gets the advertised_date of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501

        Gets or sets the advertised date.  # noqa: E501

        :return: The advertised_date of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :rtype: datetime
        """
        return self._advertised_date

    @advertised_date.setter
    def advertised_date(self, advertised_date):
        """Sets the advertised_date of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.

        Gets or sets the advertised date.  # noqa: E501

        :param advertised_date: The advertised_date of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :type: datetime
        """

        self._advertised_date = advertised_date

    @property
    def advertised_price(self):
        """Gets the advertised_price of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501

        Gets or sets the advertised price.  # noqa: E501

        :return: The advertised_price of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :rtype: int
        """
        return self._advertised_price

    @advertised_price.setter
    def advertised_price(self, advertised_price):
        """Sets the advertised_price of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.

        Gets or sets the advertised price.  # noqa: E501

        :param advertised_price: The advertised_price of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :type: int
        """

        self._advertised_price = advertised_price

    @property
    def agency(self):
        """Gets the agency of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501

        Gets or sets the name of the Agency.  # noqa: E501

        :return: The agency of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :rtype: str
        """
        return self._agency

    @agency.setter
    def agency(self, agency):
        """Sets the agency of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.

        Gets or sets the name of the Agency.  # noqa: E501

        :param agency: The agency of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :type: str
        """

        self._agency = agency

    @property
    def agency_colour(self):
        """Gets the agency_colour of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501

        Gets or sets the agency colour.  # noqa: E501

        :return: The agency_colour of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :rtype: str
        """
        return self._agency_colour

    @agency_colour.setter
    def agency_colour(self, agency_colour):
        """Sets the agency_colour of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.

        Gets or sets the agency colour.  # noqa: E501

        :param agency_colour: The agency_colour of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :type: str
        """

        self._agency_colour = agency_colour

    @property
    def agency_id(self):
        """Gets the agency_id of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501

        Gets or sets the Domain Agency identifier.  # noqa: E501

        :return: The agency_id of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :rtype: int
        """
        return self._agency_id

    @agency_id.setter
    def agency_id(self, agency_id):
        """Sets the agency_id of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.

        Gets or sets the Domain Agency identifier.  # noqa: E501

        :param agency_id: The agency_id of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :type: int
        """

        self._agency_id = agency_id

    @property
    def agency_logo(self):
        """Gets the agency_logo of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501

        Gets or sets the agency logo.  # noqa: E501

        :return: The agency_logo of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :rtype: str
        """
        return self._agency_logo

    @agency_logo.setter
    def agency_logo(self, agency_logo):
        """Sets the agency_logo of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.

        Gets or sets the agency logo.  # noqa: E501

        :param agency_logo: The agency_logo of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :type: str
        """

        self._agency_logo = agency_logo

    @property
    def agency_url(self):
        """Gets the agency_url of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501

        Gets or sets the agency url.  # noqa: E501

        :return: The agency_url of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :rtype: str
        """
        return self._agency_url

    @agency_url.setter
    def agency_url(self, agency_url):
        """Sets the agency_url of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.

        Gets or sets the agency url.  # noqa: E501

        :param agency_url: The agency_url of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :type: str
        """

        self._agency_url = agency_url

    @property
    def apm_agency_id(self):
        """Gets the apm_agency_id of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501

        Gets or sets the APM agency identifier.  # noqa: E501

        :return: The apm_agency_id of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :rtype: int
        """
        return self._apm_agency_id

    @apm_agency_id.setter
    def apm_agency_id(self, apm_agency_id):
        """Sets the apm_agency_id of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.

        Gets or sets the APM agency identifier.  # noqa: E501

        :param apm_agency_id: The apm_agency_id of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :type: int
        """

        self._apm_agency_id = apm_agency_id

    @property
    def source(self):
        """Gets the source of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501

        Gets or sets the source of the Activity  # noqa: E501

        :return: The source of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.

        Gets or sets the source of the Activity  # noqa: E501

        :param source: The source of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :type: str
        """

        self._source = source

    @property
    def suppress_details(self):
        """Gets the suppress_details of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501

        Gets or sets a value to indicate whether all of the activity details should be suppressed.  # noqa: E501

        :return: The suppress_details of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :rtype: bool
        """
        return self._suppress_details

    @suppress_details.setter
    def suppress_details(self, suppress_details):
        """Sets the suppress_details of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.

        Gets or sets a value to indicate whether all of the activity details should be suppressed.  # noqa: E501

        :param suppress_details: The suppress_details of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :type: bool
        """

        self._suppress_details = suppress_details

    @property
    def suppress_price(self):
        """Gets the suppress_price of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501

        Gets or sets a value to indicate whether the activity price should be suppressed  # noqa: E501

        :return: The suppress_price of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :rtype: bool
        """
        return self._suppress_price

    @suppress_price.setter
    def suppress_price(self, suppress_price):
        """Sets the suppress_price of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.

        Gets or sets a value to indicate whether the activity price should be suppressed  # noqa: E501

        :param suppress_price: The suppress_price of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :type: bool
        """

        self._suppress_price = suppress_price

    @property
    def type(self):
        """Gets the type of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501

        Gets or sets the type of Activity  # noqa: E501

        :return: The type of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.

        Gets or sets the type of Activity  # noqa: E501

        :param type: The type of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def url(self):
        """Gets the url of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501

        Gets or sets the Advert URL.  # noqa: E501

        :return: The url of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.

        Gets or sets the Advert URL.  # noqa: E501

        :param url: The url of this DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary.  # noqa: E501
        :type: str
        """

        self._url = url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DomainPublicAdapterWebApiModelsV1PropertiesActivityBoundary):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
