# coding: utf-8

"""
    Domain Group API V1

    Provides public access to Domain's microservices  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class DomainAgencyServiceV2ModelAccountDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cybersell_number': 'str',
        'axapta_number': 'str',
        'ad_marc_number': 'str',
        'cre_cybersell_number': 'str',
        'cre_salesforce_ref': 'str',
        'cre_axapta_number': 'str',
        'cre_ad_marc_number': 'str',
        'salesforce_ref': 'str',
        'cre_account_manager_id': 'int',
        'status': 'str',
        'account_manager_id': 'int',
        'account_manager': 'int',
        'is_developer': 'bool',
        'media_agency_name': 'str',
        'media_agency_id': 'str',
        'sap_id': 'str',
        'regional_publication_code': 'str',
        'provider_id': 'str'
    }

    attribute_map = {
        'cybersell_number': 'cybersellNumber',
        'axapta_number': 'axaptaNumber',
        'ad_marc_number': 'adMarcNumber',
        'cre_cybersell_number': 'creCybersellNumber',
        'cre_salesforce_ref': 'creSalesforceRef',
        'cre_axapta_number': 'creAxaptaNumber',
        'cre_ad_marc_number': 'creAdMarcNumber',
        'salesforce_ref': 'salesforceRef',
        'cre_account_manager_id': 'creAccountManagerId',
        'status': 'status',
        'account_manager_id': 'accountManagerId',
        'account_manager': 'accountManager',
        'is_developer': 'isDeveloper',
        'media_agency_name': 'mediaAgencyName',
        'media_agency_id': 'mediaAgencyId',
        'sap_id': 'sapId',
        'regional_publication_code': 'regionalPublicationCode',
        'provider_id': 'providerId'
    }

    def __init__(self, cybersell_number=None, axapta_number=None, ad_marc_number=None, cre_cybersell_number=None, cre_salesforce_ref=None, cre_axapta_number=None, cre_ad_marc_number=None, salesforce_ref=None, cre_account_manager_id=None, status=None, account_manager_id=None, account_manager=None, is_developer=None, media_agency_name=None, media_agency_id=None, sap_id=None, regional_publication_code=None, provider_id=None):  # noqa: E501
        """DomainAgencyServiceV2ModelAccountDetails - a model defined in Swagger"""  # noqa: E501

        self._cybersell_number = None
        self._axapta_number = None
        self._ad_marc_number = None
        self._cre_cybersell_number = None
        self._cre_salesforce_ref = None
        self._cre_axapta_number = None
        self._cre_ad_marc_number = None
        self._salesforce_ref = None
        self._cre_account_manager_id = None
        self._status = None
        self._account_manager_id = None
        self._account_manager = None
        self._is_developer = None
        self._media_agency_name = None
        self._media_agency_id = None
        self._sap_id = None
        self._regional_publication_code = None
        self._provider_id = None
        self.discriminator = None

        if cybersell_number is not None:
            self.cybersell_number = cybersell_number
        if axapta_number is not None:
            self.axapta_number = axapta_number
        if ad_marc_number is not None:
            self.ad_marc_number = ad_marc_number
        if cre_cybersell_number is not None:
            self.cre_cybersell_number = cre_cybersell_number
        if cre_salesforce_ref is not None:
            self.cre_salesforce_ref = cre_salesforce_ref
        if cre_axapta_number is not None:
            self.cre_axapta_number = cre_axapta_number
        if cre_ad_marc_number is not None:
            self.cre_ad_marc_number = cre_ad_marc_number
        if salesforce_ref is not None:
            self.salesforce_ref = salesforce_ref
        if cre_account_manager_id is not None:
            self.cre_account_manager_id = cre_account_manager_id
        if status is not None:
            self.status = status
        if account_manager_id is not None:
            self.account_manager_id = account_manager_id
        if account_manager is not None:
            self.account_manager = account_manager
        if is_developer is not None:
            self.is_developer = is_developer
        if media_agency_name is not None:
            self.media_agency_name = media_agency_name
        if media_agency_id is not None:
            self.media_agency_id = media_agency_id
        if sap_id is not None:
            self.sap_id = sap_id
        if regional_publication_code is not None:
            self.regional_publication_code = regional_publication_code
        if provider_id is not None:
            self.provider_id = provider_id

    @property
    def cybersell_number(self):
        """Gets the cybersell_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The cybersell_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: str
        """
        return self._cybersell_number

    @cybersell_number.setter
    def cybersell_number(self, cybersell_number):
        """Sets the cybersell_number of this DomainAgencyServiceV2ModelAccountDetails.


        :param cybersell_number: The cybersell_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: str
        """

        self._cybersell_number = cybersell_number

    @property
    def axapta_number(self):
        """Gets the axapta_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The axapta_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: str
        """
        return self._axapta_number

    @axapta_number.setter
    def axapta_number(self, axapta_number):
        """Sets the axapta_number of this DomainAgencyServiceV2ModelAccountDetails.


        :param axapta_number: The axapta_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: str
        """

        self._axapta_number = axapta_number

    @property
    def ad_marc_number(self):
        """Gets the ad_marc_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The ad_marc_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: str
        """
        return self._ad_marc_number

    @ad_marc_number.setter
    def ad_marc_number(self, ad_marc_number):
        """Sets the ad_marc_number of this DomainAgencyServiceV2ModelAccountDetails.


        :param ad_marc_number: The ad_marc_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: str
        """

        self._ad_marc_number = ad_marc_number

    @property
    def cre_cybersell_number(self):
        """Gets the cre_cybersell_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The cre_cybersell_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: str
        """
        return self._cre_cybersell_number

    @cre_cybersell_number.setter
    def cre_cybersell_number(self, cre_cybersell_number):
        """Sets the cre_cybersell_number of this DomainAgencyServiceV2ModelAccountDetails.


        :param cre_cybersell_number: The cre_cybersell_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: str
        """

        self._cre_cybersell_number = cre_cybersell_number

    @property
    def cre_salesforce_ref(self):
        """Gets the cre_salesforce_ref of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The cre_salesforce_ref of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: str
        """
        return self._cre_salesforce_ref

    @cre_salesforce_ref.setter
    def cre_salesforce_ref(self, cre_salesforce_ref):
        """Sets the cre_salesforce_ref of this DomainAgencyServiceV2ModelAccountDetails.


        :param cre_salesforce_ref: The cre_salesforce_ref of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: str
        """

        self._cre_salesforce_ref = cre_salesforce_ref

    @property
    def cre_axapta_number(self):
        """Gets the cre_axapta_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The cre_axapta_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: str
        """
        return self._cre_axapta_number

    @cre_axapta_number.setter
    def cre_axapta_number(self, cre_axapta_number):
        """Sets the cre_axapta_number of this DomainAgencyServiceV2ModelAccountDetails.


        :param cre_axapta_number: The cre_axapta_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: str
        """

        self._cre_axapta_number = cre_axapta_number

    @property
    def cre_ad_marc_number(self):
        """Gets the cre_ad_marc_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The cre_ad_marc_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: str
        """
        return self._cre_ad_marc_number

    @cre_ad_marc_number.setter
    def cre_ad_marc_number(self, cre_ad_marc_number):
        """Sets the cre_ad_marc_number of this DomainAgencyServiceV2ModelAccountDetails.


        :param cre_ad_marc_number: The cre_ad_marc_number of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: str
        """

        self._cre_ad_marc_number = cre_ad_marc_number

    @property
    def salesforce_ref(self):
        """Gets the salesforce_ref of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The salesforce_ref of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: str
        """
        return self._salesforce_ref

    @salesforce_ref.setter
    def salesforce_ref(self, salesforce_ref):
        """Sets the salesforce_ref of this DomainAgencyServiceV2ModelAccountDetails.


        :param salesforce_ref: The salesforce_ref of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: str
        """

        self._salesforce_ref = salesforce_ref

    @property
    def cre_account_manager_id(self):
        """Gets the cre_account_manager_id of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The cre_account_manager_id of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: int
        """
        return self._cre_account_manager_id

    @cre_account_manager_id.setter
    def cre_account_manager_id(self, cre_account_manager_id):
        """Sets the cre_account_manager_id of this DomainAgencyServiceV2ModelAccountDetails.


        :param cre_account_manager_id: The cre_account_manager_id of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: int
        """

        self._cre_account_manager_id = cre_account_manager_id

    @property
    def status(self):
        """Gets the status of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The status of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DomainAgencyServiceV2ModelAccountDetails.


        :param status: The status of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def account_manager_id(self):
        """Gets the account_manager_id of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The account_manager_id of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: int
        """
        return self._account_manager_id

    @account_manager_id.setter
    def account_manager_id(self, account_manager_id):
        """Sets the account_manager_id of this DomainAgencyServiceV2ModelAccountDetails.


        :param account_manager_id: The account_manager_id of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: int
        """

        self._account_manager_id = account_manager_id

    @property
    def account_manager(self):
        """Gets the account_manager of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The account_manager of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: int
        """
        return self._account_manager

    @account_manager.setter
    def account_manager(self, account_manager):
        """Sets the account_manager of this DomainAgencyServiceV2ModelAccountDetails.


        :param account_manager: The account_manager of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: int
        """

        self._account_manager = account_manager

    @property
    def is_developer(self):
        """Gets the is_developer of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The is_developer of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: bool
        """
        return self._is_developer

    @is_developer.setter
    def is_developer(self, is_developer):
        """Sets the is_developer of this DomainAgencyServiceV2ModelAccountDetails.


        :param is_developer: The is_developer of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: bool
        """

        self._is_developer = is_developer

    @property
    def media_agency_name(self):
        """Gets the media_agency_name of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The media_agency_name of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: str
        """
        return self._media_agency_name

    @media_agency_name.setter
    def media_agency_name(self, media_agency_name):
        """Sets the media_agency_name of this DomainAgencyServiceV2ModelAccountDetails.


        :param media_agency_name: The media_agency_name of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: str
        """

        self._media_agency_name = media_agency_name

    @property
    def media_agency_id(self):
        """Gets the media_agency_id of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The media_agency_id of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: str
        """
        return self._media_agency_id

    @media_agency_id.setter
    def media_agency_id(self, media_agency_id):
        """Sets the media_agency_id of this DomainAgencyServiceV2ModelAccountDetails.


        :param media_agency_id: The media_agency_id of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: str
        """

        self._media_agency_id = media_agency_id

    @property
    def sap_id(self):
        """Gets the sap_id of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The sap_id of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: str
        """
        return self._sap_id

    @sap_id.setter
    def sap_id(self, sap_id):
        """Sets the sap_id of this DomainAgencyServiceV2ModelAccountDetails.


        :param sap_id: The sap_id of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: str
        """

        self._sap_id = sap_id

    @property
    def regional_publication_code(self):
        """Gets the regional_publication_code of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The regional_publication_code of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: str
        """
        return self._regional_publication_code

    @regional_publication_code.setter
    def regional_publication_code(self, regional_publication_code):
        """Sets the regional_publication_code of this DomainAgencyServiceV2ModelAccountDetails.


        :param regional_publication_code: The regional_publication_code of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: str
        """

        self._regional_publication_code = regional_publication_code

    @property
    def provider_id(self):
        """Gets the provider_id of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501


        :return: The provider_id of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :rtype: str
        """
        return self._provider_id

    @provider_id.setter
    def provider_id(self, provider_id):
        """Sets the provider_id of this DomainAgencyServiceV2ModelAccountDetails.


        :param provider_id: The provider_id of this DomainAgencyServiceV2ModelAccountDetails.  # noqa: E501
        :type: str
        """

        self._provider_id = provider_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DomainAgencyServiceV2ModelAccountDetails, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DomainAgencyServiceV2ModelAccountDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
