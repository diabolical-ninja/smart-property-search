# coding: utf-8

"""
    Domain Group API V1

    Provides public access to Domain's microservices  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'unit_number': 'str',
        'street_number': 'str',
        'street_name': 'str',
        'street_type': 'str',
        'suburb': 'str',
        'postcode': 'str',
        'state': 'str',
        'geo_location': 'DomainPublicAdapterWebApiModelsV1SalesResultsGeoLocation',
        'property_type': 'str',
        'bedrooms': 'int',
        'bathrooms': 'int',
        'carspaces': 'int',
        'price': 'int',
        'result': 'str',
        'agent': 'str',
        'id': 'int',
        'agency_id': 'int',
        'agency_name': 'str',
        'agency_profile_page_url': 'str',
        'property_details_url': 'str'
    }

    attribute_map = {
        'unit_number': 'unitNumber',
        'street_number': 'streetNumber',
        'street_name': 'streetName',
        'street_type': 'streetType',
        'suburb': 'suburb',
        'postcode': 'postcode',
        'state': 'state',
        'geo_location': 'geoLocation',
        'property_type': 'propertyType',
        'bedrooms': 'bedrooms',
        'bathrooms': 'bathrooms',
        'carspaces': 'carspaces',
        'price': 'price',
        'result': 'result',
        'agent': 'agent',
        'id': 'id',
        'agency_id': 'agencyId',
        'agency_name': 'agencyName',
        'agency_profile_page_url': 'agencyProfilePageUrl',
        'property_details_url': 'propertyDetailsUrl'
    }

    def __init__(self, unit_number=None, street_number=None, street_name=None, street_type=None, suburb=None, postcode=None, state=None, geo_location=None, property_type=None, bedrooms=None, bathrooms=None, carspaces=None, price=None, result=None, agent=None, id=None, agency_id=None, agency_name=None, agency_profile_page_url=None, property_details_url=None):  # noqa: E501
        """DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary - a model defined in Swagger"""  # noqa: E501

        self._unit_number = None
        self._street_number = None
        self._street_name = None
        self._street_type = None
        self._suburb = None
        self._postcode = None
        self._state = None
        self._geo_location = None
        self._property_type = None
        self._bedrooms = None
        self._bathrooms = None
        self._carspaces = None
        self._price = None
        self._result = None
        self._agent = None
        self._id = None
        self._agency_id = None
        self._agency_name = None
        self._agency_profile_page_url = None
        self._property_details_url = None
        self.discriminator = None

        if unit_number is not None:
            self.unit_number = unit_number
        if street_number is not None:
            self.street_number = street_number
        if street_name is not None:
            self.street_name = street_name
        if street_type is not None:
            self.street_type = street_type
        if suburb is not None:
            self.suburb = suburb
        if postcode is not None:
            self.postcode = postcode
        if state is not None:
            self.state = state
        if geo_location is not None:
            self.geo_location = geo_location
        if property_type is not None:
            self.property_type = property_type
        if bedrooms is not None:
            self.bedrooms = bedrooms
        if bathrooms is not None:
            self.bathrooms = bathrooms
        if carspaces is not None:
            self.carspaces = carspaces
        if price is not None:
            self.price = price
        if result is not None:
            self.result = result
        if agent is not None:
            self.agent = agent
        if id is not None:
            self.id = id
        if agency_id is not None:
            self.agency_id = agency_id
        if agency_name is not None:
            self.agency_name = agency_name
        if agency_profile_page_url is not None:
            self.agency_profile_page_url = agency_profile_page_url
        if property_details_url is not None:
            self.property_details_url = property_details_url

    @property
    def unit_number(self):
        """Gets the unit_number of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets UnitNumber  # noqa: E501

        :return: The unit_number of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: str
        """
        return self._unit_number

    @unit_number.setter
    def unit_number(self, unit_number):
        """Sets the unit_number of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets UnitNumber  # noqa: E501

        :param unit_number: The unit_number of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: str
        """

        self._unit_number = unit_number

    @property
    def street_number(self):
        """Gets the street_number of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets StreetNumber  # noqa: E501

        :return: The street_number of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: str
        """
        return self._street_number

    @street_number.setter
    def street_number(self, street_number):
        """Sets the street_number of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets StreetNumber  # noqa: E501

        :param street_number: The street_number of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: str
        """

        self._street_number = street_number

    @property
    def street_name(self):
        """Gets the street_name of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets StreetName  # noqa: E501

        :return: The street_name of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: str
        """
        return self._street_name

    @street_name.setter
    def street_name(self, street_name):
        """Sets the street_name of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets StreetName  # noqa: E501

        :param street_name: The street_name of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: str
        """

        self._street_name = street_name

    @property
    def street_type(self):
        """Gets the street_type of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets StreetType  # noqa: E501

        :return: The street_type of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: str
        """
        return self._street_type

    @street_type.setter
    def street_type(self, street_type):
        """Sets the street_type of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets StreetType  # noqa: E501

        :param street_type: The street_type of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: str
        """

        self._street_type = street_type

    @property
    def suburb(self):
        """Gets the suburb of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets Suburb  # noqa: E501

        :return: The suburb of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: str
        """
        return self._suburb

    @suburb.setter
    def suburb(self, suburb):
        """Sets the suburb of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets Suburb  # noqa: E501

        :param suburb: The suburb of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: str
        """

        self._suburb = suburb

    @property
    def postcode(self):
        """Gets the postcode of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets Postcode  # noqa: E501

        :return: The postcode of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: str
        """
        return self._postcode

    @postcode.setter
    def postcode(self, postcode):
        """Sets the postcode of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets Postcode  # noqa: E501

        :param postcode: The postcode of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: str
        """

        self._postcode = postcode

    @property
    def state(self):
        """Gets the state of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets State  # noqa: E501

        :return: The state of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets State  # noqa: E501

        :param state: The state of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def geo_location(self):
        """Gets the geo_location of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets the GeoLocation  # noqa: E501

        :return: The geo_location of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: DomainPublicAdapterWebApiModelsV1SalesResultsGeoLocation
        """
        return self._geo_location

    @geo_location.setter
    def geo_location(self, geo_location):
        """Sets the geo_location of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets the GeoLocation  # noqa: E501

        :param geo_location: The geo_location of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: DomainPublicAdapterWebApiModelsV1SalesResultsGeoLocation
        """

        self._geo_location = geo_location

    @property
    def property_type(self):
        """Gets the property_type of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets PropertyType  # noqa: E501

        :return: The property_type of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: str
        """
        return self._property_type

    @property_type.setter
    def property_type(self, property_type):
        """Sets the property_type of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets PropertyType  # noqa: E501

        :param property_type: The property_type of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: str
        """

        self._property_type = property_type

    @property
    def bedrooms(self):
        """Gets the bedrooms of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets Bedrooms  # noqa: E501

        :return: The bedrooms of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: int
        """
        return self._bedrooms

    @bedrooms.setter
    def bedrooms(self, bedrooms):
        """Sets the bedrooms of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets Bedrooms  # noqa: E501

        :param bedrooms: The bedrooms of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: int
        """

        self._bedrooms = bedrooms

    @property
    def bathrooms(self):
        """Gets the bathrooms of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets Bathrooms  # noqa: E501

        :return: The bathrooms of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: int
        """
        return self._bathrooms

    @bathrooms.setter
    def bathrooms(self, bathrooms):
        """Sets the bathrooms of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets Bathrooms  # noqa: E501

        :param bathrooms: The bathrooms of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: int
        """

        self._bathrooms = bathrooms

    @property
    def carspaces(self):
        """Gets the carspaces of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets Carspaces  # noqa: E501

        :return: The carspaces of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: int
        """
        return self._carspaces

    @carspaces.setter
    def carspaces(self, carspaces):
        """Sets the carspaces of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets Carspaces  # noqa: E501

        :param carspaces: The carspaces of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: int
        """

        self._carspaces = carspaces

    @property
    def price(self):
        """Gets the price of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets Price  # noqa: E501

        :return: The price of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: int
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets Price  # noqa: E501

        :param price: The price of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: int
        """

        self._price = price

    @property
    def result(self):
        """Gets the result of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets Result  # noqa: E501

        :return: The result of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets Result  # noqa: E501

        :param result: The result of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: str
        """

        self._result = result

    @property
    def agent(self):
        """Gets the agent of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets Agent  # noqa: E501

        :return: The agent of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: str
        """
        return self._agent

    @agent.setter
    def agent(self, agent):
        """Sets the agent of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets Agent  # noqa: E501

        :param agent: The agent of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: str
        """

        self._agent = agent

    @property
    def id(self):
        """Gets the id of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets the listing id  # noqa: E501

        :return: The id of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets the listing id  # noqa: E501

        :param id: The id of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def agency_id(self):
        """Gets the agency_id of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets DomainAgencyId  # noqa: E501

        :return: The agency_id of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: int
        """
        return self._agency_id

    @agency_id.setter
    def agency_id(self, agency_id):
        """Sets the agency_id of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets DomainAgencyId  # noqa: E501

        :param agency_id: The agency_id of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: int
        """

        self._agency_id = agency_id

    @property
    def agency_name(self):
        """Gets the agency_name of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets AgencyName  # noqa: E501

        :return: The agency_name of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: str
        """
        return self._agency_name

    @agency_name.setter
    def agency_name(self, agency_name):
        """Sets the agency_name of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets AgencyName  # noqa: E501

        :param agency_name: The agency_name of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: str
        """

        self._agency_name = agency_name

    @property
    def agency_profile_page_url(self):
        """Gets the agency_profile_page_url of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets AgencyProfilePageUrl  # noqa: E501

        :return: The agency_profile_page_url of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: str
        """
        return self._agency_profile_page_url

    @agency_profile_page_url.setter
    def agency_profile_page_url(self, agency_profile_page_url):
        """Sets the agency_profile_page_url of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets AgencyProfilePageUrl  # noqa: E501

        :param agency_profile_page_url: The agency_profile_page_url of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: str
        """

        self._agency_profile_page_url = agency_profile_page_url

    @property
    def property_details_url(self):
        """Gets the property_details_url of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501

        Gets or Sets DomainPropertyDetailsUrl  # noqa: E501

        :return: The property_details_url of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :rtype: str
        """
        return self._property_details_url

    @property_details_url.setter
    def property_details_url(self, property_details_url):
        """Sets the property_details_url of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.

        Gets or Sets DomainPropertyDetailsUrl  # noqa: E501

        :param property_details_url: The property_details_url of this DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary.  # noqa: E501
        :type: str
        """

        self._property_details_url = property_details_url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DomainPublicAdapterWebApiModelsV1SalesResultsListingSummary):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
