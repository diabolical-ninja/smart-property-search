# coding: utf-8

"""
    Domain Group API V1

    Provides public access to Domain's microservices  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class DomainAgencyServiceV2ModelAgentInAgencyList(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'date_updated': 'datetime',
        'agency_id': 'int',
        'id': 'int',
        'email': 'str',
        'first_name': 'str',
        'mobile': 'str',
        'photo': 'str',
        'last_name': 'str',
        'is_active_profile_page': 'str',
        'phone': 'str',
        'sale_active': 'bool',
        'rental_active': 'bool',
        'secondary_email': 'str',
        'facebook_url': 'str',
        'twitter_url': 'str',
        'agent_video': 'str',
        'profile_text': 'str',
        'is_hide_sold_leased_listings': 'bool',
        'google_plus_url': 'str',
        'personal_website_url': 'str',
        'linked_in_url': 'str',
        'fax': 'str',
        'mug_shot_new': 'str',
        'contact_type_code': 'int',
        'receives_requests': 'bool',
        'cre_agent_video_url': 'str',
        'receive_scheduled_report_email': 'bool'
    }

    attribute_map = {
        'date_updated': 'dateUpdated',
        'agency_id': 'agencyId',
        'id': 'id',
        'email': 'email',
        'first_name': 'firstName',
        'mobile': 'mobile',
        'photo': 'photo',
        'last_name': 'lastName',
        'is_active_profile_page': 'isActiveProfilePage',
        'phone': 'phone',
        'sale_active': 'saleActive',
        'rental_active': 'rentalActive',
        'secondary_email': 'secondaryEmail',
        'facebook_url': 'facebookUrl',
        'twitter_url': 'twitterUrl',
        'agent_video': 'agentVideo',
        'profile_text': 'profileText',
        'is_hide_sold_leased_listings': 'isHideSoldLeasedListings',
        'google_plus_url': 'googlePlusUrl',
        'personal_website_url': 'personalWebsiteUrl',
        'linked_in_url': 'linkedInUrl',
        'fax': 'fax',
        'mug_shot_new': 'mugShotNew',
        'contact_type_code': 'contactTypeCode',
        'receives_requests': 'receivesRequests',
        'cre_agent_video_url': 'creAgentVideoURL',
        'receive_scheduled_report_email': 'receiveScheduledReportEmail'
    }

    def __init__(self, date_updated=None, agency_id=None, id=None, email=None, first_name=None, mobile=None, photo=None, last_name=None, is_active_profile_page=None, phone=None, sale_active=None, rental_active=None, secondary_email=None, facebook_url=None, twitter_url=None, agent_video=None, profile_text=None, is_hide_sold_leased_listings=None, google_plus_url=None, personal_website_url=None, linked_in_url=None, fax=None, mug_shot_new=None, contact_type_code=None, receives_requests=None, cre_agent_video_url=None, receive_scheduled_report_email=None):  # noqa: E501
        """DomainAgencyServiceV2ModelAgentInAgencyList - a model defined in Swagger"""  # noqa: E501

        self._date_updated = None
        self._agency_id = None
        self._id = None
        self._email = None
        self._first_name = None
        self._mobile = None
        self._photo = None
        self._last_name = None
        self._is_active_profile_page = None
        self._phone = None
        self._sale_active = None
        self._rental_active = None
        self._secondary_email = None
        self._facebook_url = None
        self._twitter_url = None
        self._agent_video = None
        self._profile_text = None
        self._is_hide_sold_leased_listings = None
        self._google_plus_url = None
        self._personal_website_url = None
        self._linked_in_url = None
        self._fax = None
        self._mug_shot_new = None
        self._contact_type_code = None
        self._receives_requests = None
        self._cre_agent_video_url = None
        self._receive_scheduled_report_email = None
        self.discriminator = None

        if date_updated is not None:
            self.date_updated = date_updated
        if agency_id is not None:
            self.agency_id = agency_id
        if id is not None:
            self.id = id
        if email is not None:
            self.email = email
        if first_name is not None:
            self.first_name = first_name
        if mobile is not None:
            self.mobile = mobile
        if photo is not None:
            self.photo = photo
        if last_name is not None:
            self.last_name = last_name
        if is_active_profile_page is not None:
            self.is_active_profile_page = is_active_profile_page
        if phone is not None:
            self.phone = phone
        if sale_active is not None:
            self.sale_active = sale_active
        if rental_active is not None:
            self.rental_active = rental_active
        if secondary_email is not None:
            self.secondary_email = secondary_email
        if facebook_url is not None:
            self.facebook_url = facebook_url
        if twitter_url is not None:
            self.twitter_url = twitter_url
        if agent_video is not None:
            self.agent_video = agent_video
        if profile_text is not None:
            self.profile_text = profile_text
        if is_hide_sold_leased_listings is not None:
            self.is_hide_sold_leased_listings = is_hide_sold_leased_listings
        if google_plus_url is not None:
            self.google_plus_url = google_plus_url
        if personal_website_url is not None:
            self.personal_website_url = personal_website_url
        if linked_in_url is not None:
            self.linked_in_url = linked_in_url
        if fax is not None:
            self.fax = fax
        if mug_shot_new is not None:
            self.mug_shot_new = mug_shot_new
        if contact_type_code is not None:
            self.contact_type_code = contact_type_code
        if receives_requests is not None:
            self.receives_requests = receives_requests
        if cre_agent_video_url is not None:
            self.cre_agent_video_url = cre_agent_video_url
        if receive_scheduled_report_email is not None:
            self.receive_scheduled_report_email = receive_scheduled_report_email

    @property
    def date_updated(self):
        """Gets the date_updated of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The date_updated of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param date_updated: The date_updated of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: datetime
        """

        self._date_updated = date_updated

    @property
    def agency_id(self):
        """Gets the agency_id of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The agency_id of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: int
        """
        return self._agency_id

    @agency_id.setter
    def agency_id(self, agency_id):
        """Sets the agency_id of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param agency_id: The agency_id of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: int
        """

        self._agency_id = agency_id

    @property
    def id(self):
        """Gets the id of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The id of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param id: The id of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def email(self):
        """Gets the email of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The email of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param email: The email of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The first_name of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param first_name: The first_name of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def mobile(self):
        """Gets the mobile of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The mobile of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._mobile

    @mobile.setter
    def mobile(self, mobile):
        """Sets the mobile of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param mobile: The mobile of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._mobile = mobile

    @property
    def photo(self):
        """Gets the photo of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The photo of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._photo

    @photo.setter
    def photo(self, photo):
        """Sets the photo of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param photo: The photo of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._photo = photo

    @property
    def last_name(self):
        """Gets the last_name of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The last_name of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param last_name: The last_name of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def is_active_profile_page(self):
        """Gets the is_active_profile_page of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The is_active_profile_page of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._is_active_profile_page

    @is_active_profile_page.setter
    def is_active_profile_page(self, is_active_profile_page):
        """Sets the is_active_profile_page of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param is_active_profile_page: The is_active_profile_page of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._is_active_profile_page = is_active_profile_page

    @property
    def phone(self):
        """Gets the phone of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The phone of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param phone: The phone of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._phone = phone

    @property
    def sale_active(self):
        """Gets the sale_active of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The sale_active of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: bool
        """
        return self._sale_active

    @sale_active.setter
    def sale_active(self, sale_active):
        """Sets the sale_active of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param sale_active: The sale_active of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: bool
        """

        self._sale_active = sale_active

    @property
    def rental_active(self):
        """Gets the rental_active of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The rental_active of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: bool
        """
        return self._rental_active

    @rental_active.setter
    def rental_active(self, rental_active):
        """Sets the rental_active of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param rental_active: The rental_active of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: bool
        """

        self._rental_active = rental_active

    @property
    def secondary_email(self):
        """Gets the secondary_email of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The secondary_email of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._secondary_email

    @secondary_email.setter
    def secondary_email(self, secondary_email):
        """Sets the secondary_email of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param secondary_email: The secondary_email of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._secondary_email = secondary_email

    @property
    def facebook_url(self):
        """Gets the facebook_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The facebook_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._facebook_url

    @facebook_url.setter
    def facebook_url(self, facebook_url):
        """Sets the facebook_url of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param facebook_url: The facebook_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._facebook_url = facebook_url

    @property
    def twitter_url(self):
        """Gets the twitter_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The twitter_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._twitter_url

    @twitter_url.setter
    def twitter_url(self, twitter_url):
        """Sets the twitter_url of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param twitter_url: The twitter_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._twitter_url = twitter_url

    @property
    def agent_video(self):
        """Gets the agent_video of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The agent_video of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._agent_video

    @agent_video.setter
    def agent_video(self, agent_video):
        """Sets the agent_video of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param agent_video: The agent_video of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._agent_video = agent_video

    @property
    def profile_text(self):
        """Gets the profile_text of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The profile_text of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._profile_text

    @profile_text.setter
    def profile_text(self, profile_text):
        """Sets the profile_text of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param profile_text: The profile_text of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._profile_text = profile_text

    @property
    def is_hide_sold_leased_listings(self):
        """Gets the is_hide_sold_leased_listings of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The is_hide_sold_leased_listings of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: bool
        """
        return self._is_hide_sold_leased_listings

    @is_hide_sold_leased_listings.setter
    def is_hide_sold_leased_listings(self, is_hide_sold_leased_listings):
        """Sets the is_hide_sold_leased_listings of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param is_hide_sold_leased_listings: The is_hide_sold_leased_listings of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: bool
        """

        self._is_hide_sold_leased_listings = is_hide_sold_leased_listings

    @property
    def google_plus_url(self):
        """Gets the google_plus_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The google_plus_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._google_plus_url

    @google_plus_url.setter
    def google_plus_url(self, google_plus_url):
        """Sets the google_plus_url of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param google_plus_url: The google_plus_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._google_plus_url = google_plus_url

    @property
    def personal_website_url(self):
        """Gets the personal_website_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The personal_website_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._personal_website_url

    @personal_website_url.setter
    def personal_website_url(self, personal_website_url):
        """Sets the personal_website_url of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param personal_website_url: The personal_website_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._personal_website_url = personal_website_url

    @property
    def linked_in_url(self):
        """Gets the linked_in_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The linked_in_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._linked_in_url

    @linked_in_url.setter
    def linked_in_url(self, linked_in_url):
        """Sets the linked_in_url of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param linked_in_url: The linked_in_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._linked_in_url = linked_in_url

    @property
    def fax(self):
        """Gets the fax of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The fax of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param fax: The fax of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._fax = fax

    @property
    def mug_shot_new(self):
        """Gets the mug_shot_new of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The mug_shot_new of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._mug_shot_new

    @mug_shot_new.setter
    def mug_shot_new(self, mug_shot_new):
        """Sets the mug_shot_new of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param mug_shot_new: The mug_shot_new of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._mug_shot_new = mug_shot_new

    @property
    def contact_type_code(self):
        """Gets the contact_type_code of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The contact_type_code of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: int
        """
        return self._contact_type_code

    @contact_type_code.setter
    def contact_type_code(self, contact_type_code):
        """Sets the contact_type_code of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param contact_type_code: The contact_type_code of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: int
        """

        self._contact_type_code = contact_type_code

    @property
    def receives_requests(self):
        """Gets the receives_requests of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The receives_requests of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: bool
        """
        return self._receives_requests

    @receives_requests.setter
    def receives_requests(self, receives_requests):
        """Sets the receives_requests of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param receives_requests: The receives_requests of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: bool
        """

        self._receives_requests = receives_requests

    @property
    def cre_agent_video_url(self):
        """Gets the cre_agent_video_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The cre_agent_video_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: str
        """
        return self._cre_agent_video_url

    @cre_agent_video_url.setter
    def cre_agent_video_url(self, cre_agent_video_url):
        """Sets the cre_agent_video_url of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param cre_agent_video_url: The cre_agent_video_url of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: str
        """

        self._cre_agent_video_url = cre_agent_video_url

    @property
    def receive_scheduled_report_email(self):
        """Gets the receive_scheduled_report_email of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501


        :return: The receive_scheduled_report_email of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :rtype: bool
        """
        return self._receive_scheduled_report_email

    @receive_scheduled_report_email.setter
    def receive_scheduled_report_email(self, receive_scheduled_report_email):
        """Sets the receive_scheduled_report_email of this DomainAgencyServiceV2ModelAgentInAgencyList.


        :param receive_scheduled_report_email: The receive_scheduled_report_email of this DomainAgencyServiceV2ModelAgentInAgencyList.  # noqa: E501
        :type: bool
        """

        self._receive_scheduled_report_email = receive_scheduled_report_email

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DomainAgencyServiceV2ModelAgentInAgencyList, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DomainAgencyServiceV2ModelAgentInAgencyList):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
