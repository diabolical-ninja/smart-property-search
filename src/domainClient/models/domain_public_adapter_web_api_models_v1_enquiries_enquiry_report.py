# coding: utf-8

"""
    Domain Group API V1

    Provides public access to Domain's microservices  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'recipients_delivery_status': 'list[DomainPublicAdapterWebApiModelsV1EnquiriesRecipientDeliveryStatus]',
        'delivery_method': 'str',
        'enquiry_type': 'str',
        'reference_id': 'int',
        'id': 'str',
        'sender': 'DomainPublicAdapterWebApiModelsV1EnquiriesSender',
        'subject': 'str',
        'message': 'str',
        'meta_data': 'dict(str, str)'
    }

    attribute_map = {
        'recipients_delivery_status': 'recipientsDeliveryStatus',
        'delivery_method': 'deliveryMethod',
        'enquiry_type': 'enquiryType',
        'reference_id': 'referenceId',
        'id': 'id',
        'sender': 'sender',
        'subject': 'subject',
        'message': 'message',
        'meta_data': 'metaData'
    }

    def __init__(self, recipients_delivery_status=None, delivery_method=None, enquiry_type=None, reference_id=None, id=None, sender=None, subject=None, message=None, meta_data=None):  # noqa: E501
        """DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport - a model defined in Swagger"""  # noqa: E501

        self._recipients_delivery_status = None
        self._delivery_method = None
        self._enquiry_type = None
        self._reference_id = None
        self._id = None
        self._sender = None
        self._subject = None
        self._message = None
        self._meta_data = None
        self.discriminator = None

        if recipients_delivery_status is not None:
            self.recipients_delivery_status = recipients_delivery_status
        if delivery_method is not None:
            self.delivery_method = delivery_method
        if enquiry_type is not None:
            self.enquiry_type = enquiry_type
        if reference_id is not None:
            self.reference_id = reference_id
        if id is not None:
            self.id = id
        if sender is not None:
            self.sender = sender
        if subject is not None:
            self.subject = subject
        if message is not None:
            self.message = message
        if meta_data is not None:
            self.meta_data = meta_data

    @property
    def recipients_delivery_status(self):
        """Gets the recipients_delivery_status of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501

        Recipients of the delivery  # noqa: E501

        :return: The recipients_delivery_status of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :rtype: list[DomainPublicAdapterWebApiModelsV1EnquiriesRecipientDeliveryStatus]
        """
        return self._recipients_delivery_status

    @recipients_delivery_status.setter
    def recipients_delivery_status(self, recipients_delivery_status):
        """Sets the recipients_delivery_status of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.

        Recipients of the delivery  # noqa: E501

        :param recipients_delivery_status: The recipients_delivery_status of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :type: list[DomainPublicAdapterWebApiModelsV1EnquiriesRecipientDeliveryStatus]
        """

        self._recipients_delivery_status = recipients_delivery_status

    @property
    def delivery_method(self):
        """Gets the delivery_method of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501

        Delivery method of the enquiry  # noqa: E501

        :return: The delivery_method of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :rtype: str
        """
        return self._delivery_method

    @delivery_method.setter
    def delivery_method(self, delivery_method):
        """Sets the delivery_method of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.

        Delivery method of the enquiry  # noqa: E501

        :param delivery_method: The delivery_method of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :type: str
        """
        allowed_values = ["email", "sms"]  # noqa: E501
        if delivery_method not in allowed_values:
            raise ValueError(
                "Invalid value for `delivery_method` ({0}), must be one of {1}"  # noqa: E501
                .format(delivery_method, allowed_values)
            )

        self._delivery_method = delivery_method

    @property
    def enquiry_type(self):
        """Gets the enquiry_type of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501

        Type of enquiry  # noqa: E501

        :return: The enquiry_type of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :rtype: str
        """
        return self._enquiry_type

    @enquiry_type.setter
    def enquiry_type(self, enquiry_type):
        """Sets the enquiry_type of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.

        Type of enquiry  # noqa: E501

        :param enquiry_type: The enquiry_type of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :type: str
        """
        allowed_values = ["listing", "devProject", "newDevLanding", "agencyProfile", "agentProfile", "contractRequest", "vendorEnquiry"]  # noqa: E501
        if enquiry_type not in allowed_values:
            raise ValueError(
                "Invalid value for `enquiry_type` ({0}), must be one of {1}"  # noqa: E501
                .format(enquiry_type, allowed_values)
            )

        self._enquiry_type = enquiry_type

    @property
    def reference_id(self):
        """Gets the reference_id of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501

        Listing identifier  # noqa: E501

        :return: The reference_id of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :rtype: int
        """
        return self._reference_id

    @reference_id.setter
    def reference_id(self, reference_id):
        """Sets the reference_id of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.

        Listing identifier  # noqa: E501

        :param reference_id: The reference_id of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :type: int
        """

        self._reference_id = reference_id

    @property
    def id(self):
        """Gets the id of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501

        Enquiry identifier  # noqa: E501

        :return: The id of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.

        Enquiry identifier  # noqa: E501

        :param id: The id of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def sender(self):
        """Gets the sender of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501

        Sender information  # noqa: E501

        :return: The sender of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :rtype: DomainPublicAdapterWebApiModelsV1EnquiriesSender
        """
        return self._sender

    @sender.setter
    def sender(self, sender):
        """Sets the sender of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.

        Sender information  # noqa: E501

        :param sender: The sender of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :type: DomainPublicAdapterWebApiModelsV1EnquiriesSender
        """

        self._sender = sender

    @property
    def subject(self):
        """Gets the subject of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501

        Enquiry subject  # noqa: E501

        :return: The subject of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.

        Enquiry subject  # noqa: E501

        :param subject: The subject of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :type: str
        """

        self._subject = subject

    @property
    def message(self):
        """Gets the message of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501

        Enquiry message  # noqa: E501

        :return: The message of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.

        Enquiry message  # noqa: E501

        :param message: The message of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :type: str
        """

        self._message = message

    @property
    def meta_data(self):
        """Gets the meta_data of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501

        MetaData of the enquiry  # noqa: E501

        :return: The meta_data of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._meta_data

    @meta_data.setter
    def meta_data(self, meta_data):
        """Sets the meta_data of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.

        MetaData of the enquiry  # noqa: E501

        :param meta_data: The meta_data of this DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport.  # noqa: E501
        :type: dict(str, str)
        """

        self._meta_data = meta_data

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DomainPublicAdapterWebApiModelsV1EnquiriesEnquiryReport):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
