# coding: utf-8

"""
    Domain Group API V1

    Provides public access to Domain's microservices  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class DomainAgencyServiceV2ModelAgencyOptions(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'sale_listings_gst_option': 'int',
        'lease_listings_gst_option': 'int',
        'receive_look_for_property_requests': 'bool',
        'receive_sell_property_requests': 'bool',
        'receive_property_valuation_requests': 'bool',
        'agent_directory_listing': 'bool'
    }

    attribute_map = {
        'sale_listings_gst_option': 'saleListingsGstOption',
        'lease_listings_gst_option': 'leaseListingsGstOption',
        'receive_look_for_property_requests': 'receiveLookForPropertyRequests',
        'receive_sell_property_requests': 'receiveSellPropertyRequests',
        'receive_property_valuation_requests': 'receivePropertyValuationRequests',
        'agent_directory_listing': 'agentDirectoryListing'
    }

    def __init__(self, sale_listings_gst_option=None, lease_listings_gst_option=None, receive_look_for_property_requests=None, receive_sell_property_requests=None, receive_property_valuation_requests=None, agent_directory_listing=None):  # noqa: E501
        """DomainAgencyServiceV2ModelAgencyOptions - a model defined in Swagger"""  # noqa: E501

        self._sale_listings_gst_option = None
        self._lease_listings_gst_option = None
        self._receive_look_for_property_requests = None
        self._receive_sell_property_requests = None
        self._receive_property_valuation_requests = None
        self._agent_directory_listing = None
        self.discriminator = None

        if sale_listings_gst_option is not None:
            self.sale_listings_gst_option = sale_listings_gst_option
        if lease_listings_gst_option is not None:
            self.lease_listings_gst_option = lease_listings_gst_option
        if receive_look_for_property_requests is not None:
            self.receive_look_for_property_requests = receive_look_for_property_requests
        if receive_sell_property_requests is not None:
            self.receive_sell_property_requests = receive_sell_property_requests
        if receive_property_valuation_requests is not None:
            self.receive_property_valuation_requests = receive_property_valuation_requests
        if agent_directory_listing is not None:
            self.agent_directory_listing = agent_directory_listing

    @property
    def sale_listings_gst_option(self):
        """Gets the sale_listings_gst_option of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501


        :return: The sale_listings_gst_option of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501
        :rtype: int
        """
        return self._sale_listings_gst_option

    @sale_listings_gst_option.setter
    def sale_listings_gst_option(self, sale_listings_gst_option):
        """Sets the sale_listings_gst_option of this DomainAgencyServiceV2ModelAgencyOptions.


        :param sale_listings_gst_option: The sale_listings_gst_option of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501
        :type: int
        """

        self._sale_listings_gst_option = sale_listings_gst_option

    @property
    def lease_listings_gst_option(self):
        """Gets the lease_listings_gst_option of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501


        :return: The lease_listings_gst_option of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501
        :rtype: int
        """
        return self._lease_listings_gst_option

    @lease_listings_gst_option.setter
    def lease_listings_gst_option(self, lease_listings_gst_option):
        """Sets the lease_listings_gst_option of this DomainAgencyServiceV2ModelAgencyOptions.


        :param lease_listings_gst_option: The lease_listings_gst_option of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501
        :type: int
        """

        self._lease_listings_gst_option = lease_listings_gst_option

    @property
    def receive_look_for_property_requests(self):
        """Gets the receive_look_for_property_requests of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501


        :return: The receive_look_for_property_requests of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501
        :rtype: bool
        """
        return self._receive_look_for_property_requests

    @receive_look_for_property_requests.setter
    def receive_look_for_property_requests(self, receive_look_for_property_requests):
        """Sets the receive_look_for_property_requests of this DomainAgencyServiceV2ModelAgencyOptions.


        :param receive_look_for_property_requests: The receive_look_for_property_requests of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501
        :type: bool
        """

        self._receive_look_for_property_requests = receive_look_for_property_requests

    @property
    def receive_sell_property_requests(self):
        """Gets the receive_sell_property_requests of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501


        :return: The receive_sell_property_requests of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501
        :rtype: bool
        """
        return self._receive_sell_property_requests

    @receive_sell_property_requests.setter
    def receive_sell_property_requests(self, receive_sell_property_requests):
        """Sets the receive_sell_property_requests of this DomainAgencyServiceV2ModelAgencyOptions.


        :param receive_sell_property_requests: The receive_sell_property_requests of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501
        :type: bool
        """

        self._receive_sell_property_requests = receive_sell_property_requests

    @property
    def receive_property_valuation_requests(self):
        """Gets the receive_property_valuation_requests of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501


        :return: The receive_property_valuation_requests of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501
        :rtype: bool
        """
        return self._receive_property_valuation_requests

    @receive_property_valuation_requests.setter
    def receive_property_valuation_requests(self, receive_property_valuation_requests):
        """Sets the receive_property_valuation_requests of this DomainAgencyServiceV2ModelAgencyOptions.


        :param receive_property_valuation_requests: The receive_property_valuation_requests of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501
        :type: bool
        """

        self._receive_property_valuation_requests = receive_property_valuation_requests

    @property
    def agent_directory_listing(self):
        """Gets the agent_directory_listing of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501


        :return: The agent_directory_listing of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501
        :rtype: bool
        """
        return self._agent_directory_listing

    @agent_directory_listing.setter
    def agent_directory_listing(self, agent_directory_listing):
        """Sets the agent_directory_listing of this DomainAgencyServiceV2ModelAgencyOptions.


        :param agent_directory_listing: The agent_directory_listing of this DomainAgencyServiceV2ModelAgencyOptions.  # noqa: E501
        :type: bool
        """

        self._agent_directory_listing = agent_directory_listing

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DomainAgencyServiceV2ModelAgencyOptions, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DomainAgencyServiceV2ModelAgencyOptions):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
