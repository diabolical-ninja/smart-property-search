# coding: utf-8

"""
    Domain Group API V1

    Provides public access to Domain's microservices  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class DomainPublicAdapterWebApiModelsV1ListingsStatistics(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'event_date': 'datetime',
        'listing_id': 'int',
        'total_listing_views': 'int',
        'total_photo_views': 'int',
        'total_photo_gallery_views': 'int',
        'total_floorplan_views': 'int',
        'total_map_views': 'int',
        'total_video_views': 'int',
        'total_ebrochure_views': 'int',
        'total_agent_detail_views': 'int',
        'total_shortlisted': 'int',
        'total_printed': 'int',
        'total_agent_phone_number_reveals': 'int',
        'total_enquiries': 'int',
        'total_email_to_friend': 'int',
        'total_shared_via_social_media': 'int',
        'total_inspection_time_saving': 'int',
        'total_call_to_agent_from_mobile': 'int',
        'percentage_website_views': 'float',
        'percentage_mobile_site_views': 'float',
        'percentage_smart_phone_views': 'float',
        'percentage_tablet_views': 'float'
    }

    attribute_map = {
        'event_date': 'eventDate',
        'listing_id': 'listingId',
        'total_listing_views': 'totalListingViews',
        'total_photo_views': 'totalPhotoViews',
        'total_photo_gallery_views': 'totalPhotoGalleryViews',
        'total_floorplan_views': 'totalFloorplanViews',
        'total_map_views': 'totalMapViews',
        'total_video_views': 'totalVideoViews',
        'total_ebrochure_views': 'totalEbrochureViews',
        'total_agent_detail_views': 'totalAgentDetailViews',
        'total_shortlisted': 'totalShortlisted',
        'total_printed': 'totalPrinted',
        'total_agent_phone_number_reveals': 'totalAgentPhoneNumberReveals',
        'total_enquiries': 'totalEnquiries',
        'total_email_to_friend': 'totalEmailToFriend',
        'total_shared_via_social_media': 'totalSharedViaSocialMedia',
        'total_inspection_time_saving': 'totalInspectionTimeSaving',
        'total_call_to_agent_from_mobile': 'totalCallToAgentFromMobile',
        'percentage_website_views': 'percentageWebsiteViews',
        'percentage_mobile_site_views': 'percentageMobileSiteViews',
        'percentage_smart_phone_views': 'percentageSmartPhoneViews',
        'percentage_tablet_views': 'percentageTabletViews'
    }

    def __init__(self, event_date=None, listing_id=None, total_listing_views=None, total_photo_views=None, total_photo_gallery_views=None, total_floorplan_views=None, total_map_views=None, total_video_views=None, total_ebrochure_views=None, total_agent_detail_views=None, total_shortlisted=None, total_printed=None, total_agent_phone_number_reveals=None, total_enquiries=None, total_email_to_friend=None, total_shared_via_social_media=None, total_inspection_time_saving=None, total_call_to_agent_from_mobile=None, percentage_website_views=None, percentage_mobile_site_views=None, percentage_smart_phone_views=None, percentage_tablet_views=None):  # noqa: E501
        """DomainPublicAdapterWebApiModelsV1ListingsStatistics - a model defined in Swagger"""  # noqa: E501

        self._event_date = None
        self._listing_id = None
        self._total_listing_views = None
        self._total_photo_views = None
        self._total_photo_gallery_views = None
        self._total_floorplan_views = None
        self._total_map_views = None
        self._total_video_views = None
        self._total_ebrochure_views = None
        self._total_agent_detail_views = None
        self._total_shortlisted = None
        self._total_printed = None
        self._total_agent_phone_number_reveals = None
        self._total_enquiries = None
        self._total_email_to_friend = None
        self._total_shared_via_social_media = None
        self._total_inspection_time_saving = None
        self._total_call_to_agent_from_mobile = None
        self._percentage_website_views = None
        self._percentage_mobile_site_views = None
        self._percentage_smart_phone_views = None
        self._percentage_tablet_views = None
        self.discriminator = None

        if event_date is not None:
            self.event_date = event_date
        if listing_id is not None:
            self.listing_id = listing_id
        if total_listing_views is not None:
            self.total_listing_views = total_listing_views
        if total_photo_views is not None:
            self.total_photo_views = total_photo_views
        if total_photo_gallery_views is not None:
            self.total_photo_gallery_views = total_photo_gallery_views
        if total_floorplan_views is not None:
            self.total_floorplan_views = total_floorplan_views
        if total_map_views is not None:
            self.total_map_views = total_map_views
        if total_video_views is not None:
            self.total_video_views = total_video_views
        if total_ebrochure_views is not None:
            self.total_ebrochure_views = total_ebrochure_views
        if total_agent_detail_views is not None:
            self.total_agent_detail_views = total_agent_detail_views
        if total_shortlisted is not None:
            self.total_shortlisted = total_shortlisted
        if total_printed is not None:
            self.total_printed = total_printed
        if total_agent_phone_number_reveals is not None:
            self.total_agent_phone_number_reveals = total_agent_phone_number_reveals
        if total_enquiries is not None:
            self.total_enquiries = total_enquiries
        if total_email_to_friend is not None:
            self.total_email_to_friend = total_email_to_friend
        if total_shared_via_social_media is not None:
            self.total_shared_via_social_media = total_shared_via_social_media
        if total_inspection_time_saving is not None:
            self.total_inspection_time_saving = total_inspection_time_saving
        if total_call_to_agent_from_mobile is not None:
            self.total_call_to_agent_from_mobile = total_call_to_agent_from_mobile
        if percentage_website_views is not None:
            self.percentage_website_views = percentage_website_views
        if percentage_mobile_site_views is not None:
            self.percentage_mobile_site_views = percentage_mobile_site_views
        if percentage_smart_phone_views is not None:
            self.percentage_smart_phone_views = percentage_smart_phone_views
        if percentage_tablet_views is not None:
            self.percentage_tablet_views = percentage_tablet_views

    @property
    def event_date(self):
        """Gets the event_date of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Date of statistics events  # noqa: E501

        :return: The event_date of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: datetime
        """
        return self._event_date

    @event_date.setter
    def event_date(self, event_date):
        """Sets the event_date of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Date of statistics events  # noqa: E501

        :param event_date: The event_date of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: datetime
        """

        self._event_date = event_date

    @property
    def listing_id(self):
        """Gets the listing_id of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Domain Advertisement Id  # noqa: E501

        :return: The listing_id of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._listing_id

    @listing_id.setter
    def listing_id(self, listing_id):
        """Sets the listing_id of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Domain Advertisement Id  # noqa: E501

        :param listing_id: The listing_id of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._listing_id = listing_id

    @property
    def total_listing_views(self):
        """Gets the total_listing_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total number of views for the listing details  # noqa: E501

        :return: The total_listing_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_listing_views

    @total_listing_views.setter
    def total_listing_views(self, total_listing_views):
        """Sets the total_listing_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total number of views for the listing details  # noqa: E501

        :param total_listing_views: The total_listing_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_listing_views = total_listing_views

    @property
    def total_photo_views(self):
        """Gets the total_photo_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total number of listing photo views  # noqa: E501

        :return: The total_photo_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_photo_views

    @total_photo_views.setter
    def total_photo_views(self, total_photo_views):
        """Sets the total_photo_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total number of listing photo views  # noqa: E501

        :param total_photo_views: The total_photo_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_photo_views = total_photo_views

    @property
    def total_photo_gallery_views(self):
        """Gets the total_photo_gallery_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total number of listing photo gallery views  # noqa: E501

        :return: The total_photo_gallery_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_photo_gallery_views

    @total_photo_gallery_views.setter
    def total_photo_gallery_views(self, total_photo_gallery_views):
        """Sets the total_photo_gallery_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total number of listing photo gallery views  # noqa: E501

        :param total_photo_gallery_views: The total_photo_gallery_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_photo_gallery_views = total_photo_gallery_views

    @property
    def total_floorplan_views(self):
        """Gets the total_floorplan_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total number of floorplan views  # noqa: E501

        :return: The total_floorplan_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_floorplan_views

    @total_floorplan_views.setter
    def total_floorplan_views(self, total_floorplan_views):
        """Sets the total_floorplan_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total number of floorplan views  # noqa: E501

        :param total_floorplan_views: The total_floorplan_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_floorplan_views = total_floorplan_views

    @property
    def total_map_views(self):
        """Gets the total_map_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total number of address map views  # noqa: E501

        :return: The total_map_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_map_views

    @total_map_views.setter
    def total_map_views(self, total_map_views):
        """Sets the total_map_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total number of address map views  # noqa: E501

        :param total_map_views: The total_map_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_map_views = total_map_views

    @property
    def total_video_views(self):
        """Gets the total_video_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total number of vedio views  # noqa: E501

        :return: The total_video_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_video_views

    @total_video_views.setter
    def total_video_views(self, total_video_views):
        """Sets the total_video_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total number of vedio views  # noqa: E501

        :param total_video_views: The total_video_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_video_views = total_video_views

    @property
    def total_ebrochure_views(self):
        """Gets the total_ebrochure_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total number of Ebrochure views  # noqa: E501

        :return: The total_ebrochure_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_ebrochure_views

    @total_ebrochure_views.setter
    def total_ebrochure_views(self, total_ebrochure_views):
        """Sets the total_ebrochure_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total number of Ebrochure views  # noqa: E501

        :param total_ebrochure_views: The total_ebrochure_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_ebrochure_views = total_ebrochure_views

    @property
    def total_agent_detail_views(self):
        """Gets the total_agent_detail_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total number of agent detail views  # noqa: E501

        :return: The total_agent_detail_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_agent_detail_views

    @total_agent_detail_views.setter
    def total_agent_detail_views(self, total_agent_detail_views):
        """Sets the total_agent_detail_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total number of agent detail views  # noqa: E501

        :param total_agent_detail_views: The total_agent_detail_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_agent_detail_views = total_agent_detail_views

    @property
    def total_shortlisted(self):
        """Gets the total_shortlisted of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total number of times the listing was shortlisted  # noqa: E501

        :return: The total_shortlisted of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_shortlisted

    @total_shortlisted.setter
    def total_shortlisted(self, total_shortlisted):
        """Sets the total_shortlisted of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total number of times the listing was shortlisted  # noqa: E501

        :param total_shortlisted: The total_shortlisted of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_shortlisted = total_shortlisted

    @property
    def total_printed(self):
        """Gets the total_printed of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total number of time the listing detail was printed  # noqa: E501

        :return: The total_printed of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_printed

    @total_printed.setter
    def total_printed(self, total_printed):
        """Sets the total_printed of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total number of time the listing detail was printed  # noqa: E501

        :param total_printed: The total_printed of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_printed = total_printed

    @property
    def total_agent_phone_number_reveals(self):
        """Gets the total_agent_phone_number_reveals of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total number of times the agent phone number was revealed for contact  # noqa: E501

        :return: The total_agent_phone_number_reveals of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_agent_phone_number_reveals

    @total_agent_phone_number_reveals.setter
    def total_agent_phone_number_reveals(self, total_agent_phone_number_reveals):
        """Sets the total_agent_phone_number_reveals of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total number of times the agent phone number was revealed for contact  # noqa: E501

        :param total_agent_phone_number_reveals: The total_agent_phone_number_reveals of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_agent_phone_number_reveals = total_agent_phone_number_reveals

    @property
    def total_enquiries(self):
        """Gets the total_enquiries of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total number of enquiries  # noqa: E501

        :return: The total_enquiries of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_enquiries

    @total_enquiries.setter
    def total_enquiries(self, total_enquiries):
        """Sets the total_enquiries of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total number of enquiries  # noqa: E501

        :param total_enquiries: The total_enquiries of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_enquiries = total_enquiries

    @property
    def total_email_to_friend(self):
        """Gets the total_email_to_friend of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total number of times the listing link was emailed  # noqa: E501

        :return: The total_email_to_friend of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_email_to_friend

    @total_email_to_friend.setter
    def total_email_to_friend(self, total_email_to_friend):
        """Sets the total_email_to_friend of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total number of times the listing link was emailed  # noqa: E501

        :param total_email_to_friend: The total_email_to_friend of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_email_to_friend = total_email_to_friend

    @property
    def total_shared_via_social_media(self):
        """Gets the total_shared_via_social_media of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total number of shares via social media  # noqa: E501

        :return: The total_shared_via_social_media of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_shared_via_social_media

    @total_shared_via_social_media.setter
    def total_shared_via_social_media(self, total_shared_via_social_media):
        """Sets the total_shared_via_social_media of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total number of shares via social media  # noqa: E501

        :param total_shared_via_social_media: The total_shared_via_social_media of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_shared_via_social_media = total_shared_via_social_media

    @property
    def total_inspection_time_saving(self):
        """Gets the total_inspection_time_saving of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total numnber of times when the inspection was saved to calendar  # noqa: E501

        :return: The total_inspection_time_saving of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_inspection_time_saving

    @total_inspection_time_saving.setter
    def total_inspection_time_saving(self, total_inspection_time_saving):
        """Sets the total_inspection_time_saving of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total numnber of times when the inspection was saved to calendar  # noqa: E501

        :param total_inspection_time_saving: The total_inspection_time_saving of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_inspection_time_saving = total_inspection_time_saving

    @property
    def total_call_to_agent_from_mobile(self):
        """Gets the total_call_to_agent_from_mobile of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Total number of calls made to agent from inside the listing  # noqa: E501

        :return: The total_call_to_agent_from_mobile of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_call_to_agent_from_mobile

    @total_call_to_agent_from_mobile.setter
    def total_call_to_agent_from_mobile(self, total_call_to_agent_from_mobile):
        """Sets the total_call_to_agent_from_mobile of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Total number of calls made to agent from inside the listing  # noqa: E501

        :param total_call_to_agent_from_mobile: The total_call_to_agent_from_mobile of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: int
        """

        self._total_call_to_agent_from_mobile = total_call_to_agent_from_mobile

    @property
    def percentage_website_views(self):
        """Gets the percentage_website_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Percentage of total views from website  # noqa: E501

        :return: The percentage_website_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: float
        """
        return self._percentage_website_views

    @percentage_website_views.setter
    def percentage_website_views(self, percentage_website_views):
        """Sets the percentage_website_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Percentage of total views from website  # noqa: E501

        :param percentage_website_views: The percentage_website_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: float
        """

        self._percentage_website_views = percentage_website_views

    @property
    def percentage_mobile_site_views(self):
        """Gets the percentage_mobile_site_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Percentage of total views from mobile site  # noqa: E501

        :return: The percentage_mobile_site_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: float
        """
        return self._percentage_mobile_site_views

    @percentage_mobile_site_views.setter
    def percentage_mobile_site_views(self, percentage_mobile_site_views):
        """Sets the percentage_mobile_site_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Percentage of total views from mobile site  # noqa: E501

        :param percentage_mobile_site_views: The percentage_mobile_site_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: float
        """

        self._percentage_mobile_site_views = percentage_mobile_site_views

    @property
    def percentage_smart_phone_views(self):
        """Gets the percentage_smart_phone_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Percentage of total views from smart phone apps  # noqa: E501

        :return: The percentage_smart_phone_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: float
        """
        return self._percentage_smart_phone_views

    @percentage_smart_phone_views.setter
    def percentage_smart_phone_views(self, percentage_smart_phone_views):
        """Sets the percentage_smart_phone_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Percentage of total views from smart phone apps  # noqa: E501

        :param percentage_smart_phone_views: The percentage_smart_phone_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: float
        """

        self._percentage_smart_phone_views = percentage_smart_phone_views

    @property
    def percentage_tablet_views(self):
        """Gets the percentage_tablet_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501

        Percentage of total views from tablets  # noqa: E501

        :return: The percentage_tablet_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :rtype: float
        """
        return self._percentage_tablet_views

    @percentage_tablet_views.setter
    def percentage_tablet_views(self, percentage_tablet_views):
        """Sets the percentage_tablet_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.

        Percentage of total views from tablets  # noqa: E501

        :param percentage_tablet_views: The percentage_tablet_views of this DomainPublicAdapterWebApiModelsV1ListingsStatistics.  # noqa: E501
        :type: float
        """

        self._percentage_tablet_views = percentage_tablet_views

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DomainPublicAdapterWebApiModelsV1ListingsStatistics, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DomainPublicAdapterWebApiModelsV1ListingsStatistics):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
